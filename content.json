{"meta":{"title":"Blog Pribadi Fahri","subtitle":"Ngeblog biar hidup tetap nyaman","description":"NgeBlog untuk belajar dan berbagi","author":"Fahri Firdausillah","url":"http://fahrifirdaus.web.id"},"pages":[{"title":"Sample Page","date":"2012-11-30T08:04:41.000Z","updated":"2016-12-22T16:46:48.000Z","comments":true,"path":"sample-page/index.html","permalink":"http://fahrifirdaus.web.id/sample-page/index.html","excerpt":"","text":"This is an example page. It’s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this: Hi there! I’m a bike messenger by day, aspiring actor by night, and this is my blog. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin’ caught in the rain.) …or something like this: The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickies to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community. As a new WordPress user, you should go to your dashboard to delete this page and create new pages for your content. Have fun!"}],"posts":[{"title":"Menggugat (peraturan) Lomba Web SMK","slug":"menggugat-lomba-web-smk","date":"2017-01-20T23:20:44.000Z","updated":"2017-01-21T00:02:52.000Z","comments":true,"path":"2017/01/menggugat-lomba-web-smk/","link":"","permalink":"http://fahrifirdaus.web.id/2017/01/menggugat-lomba-web-smk/","excerpt":"Setiap diminta menjadi juri lomba Web SMK saya selalu merasa campur aduk antara senang dan sedih. Senang karena saya masih dipercaya ketemu dengan talenta2 muda, calon programmer web jenius di masa depan. Tapi sedih karena ada beberapa peraturan lomba web development yang bagi saya terlalu strict bahkan untuk seorang programmer. Tema sudah ditentukan dari awal Siswa berangkat dengan tangan kosong Melakukan coding di lab dengan komputer yang sudah disediakan panitia Dalam komputer hanya tersedia aset teks, visual, dan library jQuery Komputer yang digunakan tidak terkoneksi dengan Internet dan tentu saja tidak ada dokumentasi untuk dicontek.","text":"Setiap diminta menjadi juri lomba Web SMK saya selalu merasa campur aduk antara senang dan sedih. Senang karena saya masih dipercaya ketemu dengan talenta2 muda, calon programmer web jenius di masa depan. Tapi sedih karena ada beberapa peraturan lomba web development yang bagi saya terlalu strict bahkan untuk seorang programmer. Tema sudah ditentukan dari awal Siswa berangkat dengan tangan kosong Melakukan coding di lab dengan komputer yang sudah disediakan panitia Dalam komputer hanya tersedia aset teks, visual, dan library jQuery Komputer yang digunakan tidak terkoneksi dengan Internet dan tentu saja tidak ada dokumentasi untuk dicontek. Dus yang dilakukan peserta lomba adalah menghafalkan koding dan menuliskan kembali pada saat lomba. Tidak terlalu banyak ruang untuk berkreasi apalagi berinovasi. Padahal software development adalah proses menyusun pecahan kode untuk menyelesaikan permasalahan yang ada, atau membangun sesuatu yang inovatif. Lebih jauh lagi software development modern tidak dibangun dari scratch file kosong, tapi dari biolerplate yang siap disusun ulang. Teringat joke tahun lalu dimana Programming diartikan sebagai “art of googling and stackoverflowing”, yang maknanya hampir bisa dipastikan seorang programmer / developer itu membangun software dengan merangkai contekan-contekan yang tersebar di Internet, karena memang seperti itulah sebuah teknologi dibangun. Merangkai building block komponen teknologi yang telah dibuat sebelumnya oleh orang lain, mencontek ide, dan memodifikasinya untuk membangun sesuatu yang lebih bermanfaat, bukan dengan menghafal dan merenung di dalam kamar gelap terkunci. Lalu apa efeknya?Model penanaman pola pikir dengan peraturan lomba seperti itu akan menghasilkan siswa menjadi calon programmer yang sami’na wa atho’na tapi tidak kreatif. Efek terbesar adalah ketika siswa masuk ke dunia kerja akan mudah menolak pekerjaan yang membutuhkan ilmu baru dengan alasan “belum pernah diajarkan”, padahal sudah bukan rahasia lagi kalau teknologi yang diterapkan di dunia kerja selalu dua atau tiga langkah lebih maju dibandingkan teknologi yang dipelajari di sekolah. Sering sekali ketika mengajar di kelas saya mengomparasikan dua teknologi, lalu memberikan sugesti bahwa teknologi B (yang notabenenya lebih baru) lebih mudah digunakan daripada teknologi A (yang sudah dipelajari dari SMK), kemudian memberikan pilihan kepada mahasiswa untuk memilih antara dua teknologi tersebut. Dan bisa dipastikan, jawaban mayoritas adalah mahasiswa lebih memilih untuk menggunakan teknologi A, dengan alasan sudah pernah belajar &amp; sudah ada contoh dari kakak kelas. Saya khawatir jika pola ini terus berjalan, kita hanya akan memproduksi tenaga ahli yang tertinggal beberapa langkah dari pasar global dan hanya mampu beradaptasi mengembangkan software untuk tetangga sekitar. Kita akan mencetak generasi yang hanya mampu belajar itu-itu aja, dan tidak mau berkembang dari zona amannya. So, entah saya akan dipanggil untuk menjadi juri lagi ataupun tidak, saya berharap pemegang kebijakan untuk memikirkan ulang peraturan lomba web development tingkat SMK dari memorizing driven menjadi problem solve driven. Dengan harapan lulusan SMK yang dihasilkan dapat menjadi generasi developer yang kreatif dan inovatif untuk Indonesia yang lebih maju. Sebuah kata penutup guyonan dari temen saya “Mending ngapalin Al-Quran daripada ngapalin Koding”.","categories":[{"name":"Inilah Hidup","slug":"Inilah-Hidup","permalink":"http://fahrifirdaus.web.id/categories/Inilah-Hidup/"},{"name":"Inspirasi","slug":"Inilah-Hidup/Inspirasi","permalink":"http://fahrifirdaus.web.id/categories/Inilah-Hidup/Inspirasi/"}],"tags":[{"name":"web","slug":"web","permalink":"http://fahrifirdaus.web.id/tags/web/"},{"name":"smk","slug":"smk","permalink":"http://fahrifirdaus.web.id/tags/smk/"},{"name":"lomba","slug":"lomba","permalink":"http://fahrifirdaus.web.id/tags/lomba/"}]},{"title":"Kenapa Saya Memilih Hexo","slug":"kenapa-saya-memilih-hexo","date":"2016-12-22T11:38:41.000Z","updated":"2016-12-23T17:30:00.000Z","comments":true,"path":"2016/12/kenapa-saya-memilih-hexo/","link":"","permalink":"http://fahrifirdaus.web.id/2016/12/kenapa-saya-memilih-hexo/","excerpt":"Move On dari WordpressTidak ada yang salah dengan Wordpress. In fact, Wordpress adalah salah satu CMS terbaik yang pernah saya gunakan. Mudah digunakan, dukungan plugin yang beragam, theme yang menarik, akhir-akhir ini banyak theme yang menggunakan visual builder, dan tentunya dukungan komunitas yang solid. Hanya saja, setelah lama menggunakan Wordpress, untuk web pribadi saya ingin move on ke sesuatu yang lebih cepat, lebih minim fitur tapi tepat guna, mudah singkron di lokal, dan lebih nerd-look. Sesuatu yang static web generator dan markdown friendly untuk memudahkan berbagi posting tentang koding. Mulailah mencoba mencari-cari platform yang tepat seperti Jekyll, Hugo, Octopress, dan hexo.","text":"Move On dari WordpressTidak ada yang salah dengan Wordpress. In fact, Wordpress adalah salah satu CMS terbaik yang pernah saya gunakan. Mudah digunakan, dukungan plugin yang beragam, theme yang menarik, akhir-akhir ini banyak theme yang menggunakan visual builder, dan tentunya dukungan komunitas yang solid. Hanya saja, setelah lama menggunakan Wordpress, untuk web pribadi saya ingin move on ke sesuatu yang lebih cepat, lebih minim fitur tapi tepat guna, mudah singkron di lokal, dan lebih nerd-look. Sesuatu yang static web generator dan markdown friendly untuk memudahkan berbagi posting tentang koding. Mulailah mencoba mencari-cari platform yang tepat seperti Jekyll, Hugo, Octopress, dan hexo. Ternyata Bukan JekyllKalau pilihannya berdasarkan popularitas, pastilah seharusnya saya memilih jekyll. Mindset awal saya adalah blogging tool yang terintegrasi dengan Github, dan jelas Github sudah men-support Jekyll out of the box. Saya sempat mengikuti tutorial untuk men-generate github pages langsung dari salah satu repository github dengan menggunakan Jekyll. Bahkan github juga menyediakan support beberapa tema untuk Jekyll yang cukup manis dan mudah digunakan dengan hanya klik dan klik di bagian setting dari repository tersebut, dan iya github pages pertama saya telah berhasil di-publish. Meski cepat, mudah digunakan, dan play well dengan Github saya merasa masih banyak kekurangan yang ada pada konfigurasi awal dari Jekyll. Misalnya yang paling jelas: Tidak ada archive untuk postingan terdahulu Tidak ada search juga untuk mencari postingan lama Tampilan per kategori, juga tidak ada Link ke postingan / halaman lain harus dibuat secara explisit Oke oke, saya tahu bagi anda yang sudah memakai Jekyll pasti akan berargumen semua itu bisa di-setting dengan mudah dengan menggunakan bla bla bla. Masalahnya adalah ketika saya mencoba mencari bagaimana melakukan setting untuk menambahkan fitur tersebut, saya tidak menemukan cara yang straightforward, dan saya tidak sedang dalam mood belajar secara intensive saat mencoba tools baru. Tentu saja saya mengharapkan fitur tersebut sudah tersedia secara out of the box semenjak pertama kali diinstall. Betemu dengan HexoDan akhirnya bertemu dengan salah satu site generator bernama Hexo. Dokumentasinya straightforward fitur yang saya cari tersedia out of the box, berbasis NodeJS (yang kebetulan sudah terinstall di laptop saya), dan juga ketemu tutorial singkat untuk men-deploy blog pada github pages. Cari lebih dalam lagi, ketemu beberapa pilihan theme yang menurut saya memanjakan mata. Okay the search is over, saat ini tidak perlu melakukan explore dan perbandingan lebih jauh lagi. Langsung beraksi create &amp; deploy blog pribadi dengan Hexo ke dalam Github Pages, dan hasilnya sangat memuaskan. Dan akhirnya saya memantapkan hati untuk menggunakan Hexo untuk blogging platform. Yah karena ini baru perkenalan pertama jadi saya masih belum mood untuk mengeksplore lebih jauh lagi apa yang bisa dilakukan dengan Hexo, dan sejauh ini saya cukup puas. Nanti saat udah ada waktu saya akan meng-eksplore lebih jauh lagi penggunaan Hexo termasuk membandingkannya dengan beberapa static web generator lain. Bukan tidak mungkin suatu saat hati saya bakal berlabuh ke Engine lain. Saya tidak akan fanatik dan tidak akan tertutup untuk berbagai macam kemungkinan. Akhir kalam, tool tetaplah tool. Secantik dan sehebat apapun tool itu tidak akan berguna jika tidak ada yang menggunakannya. Sebaliknya tool yang sederhana bisa menjadi sangat powerfull ketika jatuh di tangan orang yang tepat. Bagaimanapun juga, web pertama dilahirkan oleh seorang Fisikawan dengan menggunakan Komputer Next-nya yang dianggap sebagai produk gagal. Wallahu A’lam","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://fahrifirdaus.web.id/tags/hexo/"},{"name":"blogging","slug":"blogging","permalink":"http://fahrifirdaus.web.id/tags/blogging/"},{"name":"static generator","slug":"static-generator","permalink":"http://fahrifirdaus.web.id/tags/static-generator/"}]},{"title":"Cara Mengecek Foto Hoax","slug":"cara-mengecek-foto-hoax","date":"2016-11-25T14:33:16.000Z","updated":"2016-12-23T17:23:44.000Z","comments":true,"path":"2016/11/cara-mengecek-foto-hoax/","link":"","permalink":"http://fahrifirdaus.web.id/2016/11/cara-mengecek-foto-hoax/","excerpt":"Lajunya teknologi informasi semakin memudahkan siapa saja untuk menyebarkan informasi. Beberapa orang memanfaatkannya untuk tujuan positif seperti memberikan tutorial ataupun menyebarkan dakwah. Sebagian lain memanfaatkan teknologi tersebut untuk menyebarkan informasi yang tidak benar. Tujuannya beragam, mulai dari kepentingan politik, sentimen pribadi, atau bahkan untuk mendulang rupiah.","text":"Lajunya teknologi informasi semakin memudahkan siapa saja untuk menyebarkan informasi. Beberapa orang memanfaatkannya untuk tujuan positif seperti memberikan tutorial ataupun menyebarkan dakwah. Sebagian lain memanfaatkan teknologi tersebut untuk menyebarkan informasi yang tidak benar. Tujuannya beragam, mulai dari kepentingan politik, sentimen pribadi, atau bahkan untuk mendulang rupiah.Informasi yang berupa teks tentu mudah diklarifikasi hanya dengan mencari ulang di mesin pencari seperti Google untuk mendapatkan referensi lain untuk melakukan crosscheck. Tapi jika informasi hoax tersebut berupa gambar yang sudah diberikan beberapa editan, tentu saja susah kalau mencarinya dengan cara mengetikkan tema dari gambar tersebut. Untungnya saat ini mesin pencari (seperti Google) tidak hanya dapat digunakan untuk pencarian berbasis teks saja, tapi juga dapat digunakan untuk pencarian berbasis gambar. Berikut adalah caranya: Download file gambar yang ingin kita croscheck kebenarannya Masukkan url images.google.com dan tekan enter Pada form pencarian, klik icon kamera kemudian pilih tab “upload an image” Klik browse dan pilih file gambar yang ingin kita cari Tunggu sampe proses upload selesai, dan Google akan memberikan kita hasil dari pencarian Tidak seperti pencarian teks, pencarian gambar terkadang memang masih tidak terlalu akurat. Meski demikian pengalaman saya menggunakan tool ini semakin hari pencariannya semakin akurat dan semakin mudah untuk mengetahui apakah informasi yang diberikan pada gambar editan tersebut betul ataukah cuman hoax. Apakah dengan adanya perangkat pencarian tersebut membuat kita sudah pasti terbebas dari Hoax? Pastinya tidak, karena seringkali kita berpikir bukan dengan akal sehat, tapi dengan perasaan. Seringkali kita (bahkan seorang profesor sekalipun) menjadi tidak rasional saat keyakinan fundamentalnya terguncang. Seringkali kita akan melakukan skeptisme habis-habisan ketika mendapatkan fakta yang bertentangan dengan rasa nyaman kita, dan sebaliknya akan menelan mentah2 informasi ketika sudah sesuai dengan kondisi nyaman kita. Jadi bagaimana kalau sekarang kita menahan nafsu untuk melakukan sharing atau sekedar komentar informasi baru sebelum kita melakukan crosscheck terhadap informasi tersebut? Mari menjadi konsumen informasi yang kritis dan tidak mudah dibodohi bahkan dengan ayat-ayat sakral sekalipun.","categories":[{"name":"Catatan","slug":"Catatan","permalink":"http://fahrifirdaus.web.id/categories/Catatan/"},{"name":"Inilah Hidup","slug":"Catatan/Inilah-Hidup","permalink":"http://fahrifirdaus.web.id/categories/Catatan/Inilah-Hidup/"}],"tags":[{"name":"gambar","slug":"gambar","permalink":"http://fahrifirdaus.web.id/tags/gambar/"},{"name":"google","slug":"google","permalink":"http://fahrifirdaus.web.id/tags/google/"},{"name":"hoax","slug":"hoax","permalink":"http://fahrifirdaus.web.id/tags/hoax/"},{"name":"konfirmasi","slug":"konfirmasi","permalink":"http://fahrifirdaus.web.id/tags/konfirmasi/"}]},{"title":"Renungan Hari Kartini","slug":"renungan-hari-kartini","date":"2016-04-21T17:05:33.000Z","updated":"2016-12-23T10:06:18.000Z","comments":true,"path":"2016/04/renungan-hari-kartini/","link":"","permalink":"http://fahrifirdaus.web.id/2016/04/renungan-hari-kartini/","excerpt":"","text":"Mengapa ada hari Kartini tapi tidak ada peringatan Dewi Sartika, hari Cut Nyak Dien, hari Keumalahayati, dan pejuang wanita hebat lain? Suka atau tidak, di dunia nyata orang akan dikenal jika punya publikasi yang bagus. Sehebat dan sebrillian apapun orang jika tidak mampu membuat publikasi maka kenangannya akan habis dimakan zaman. Saya setuju dengan teori ketekenalan Kartini adalah karena teman korespondensinya mempublikasikan gagasan beliau yang tertuang di suratnya. Meskipun beliau tidak sempat merealisasikan gagasan tersebut, namun karena publikasi yang bagus nama beliau bahkan lebih terkenal dibandingkan pahlawan wanita lain yang berhasil melakukan aksi. Tapi saya sangat tidak setuju jika karena alasan tersebut Kartini kemudian dikesankan sebagai antagonis antek Belanda yang mencoba mengadu domba pribumi Indonesia. Karena ada pahlawan wanita yang lebih hebat namun belum sempat terpublikasikan dengan baik, bukan berarti Kartini adalah boneka yang dibuat-buat kaum kolonial. Bagi saya ini rasanya seperti mejelekkan bangsa sendiri. Setelah menyadari ada pahlawan wanita lain yang lebih hebat dari Kartini lebih baik kita juga menjunjung tinggi mereka tanpa merendahkan yang lain. Bukankan lebih baik jika kita memiliki lebih banyak junjungan daripada mencoba menumbangkan satu untuk mengunggulkan yang lain. Jadi jika kita merasa ada pahlawan Wanita lain lebih hebat dari Kartini, mari kita teliti apa saja gagasan dan aksi nyatanya, mari kita publikasikan kekuatan2nya, mari kita torehkan banyak tinta untuk menunjukkan betapa banyak role model asli dari Indonesia yang bisa ditiru. Mari publikasikan lebih banyak lagi pahlawan, ilmuwan, ulama, dan panutan asli dari Indonesia. Selamat Hari Kartini, dan selamat Malam Jum’at. Salam: Fahri Firdausillah[Lahir di Jepara dan sekarang tinggal di Jl. Dewi Sartika]","categories":[{"name":"Catatan","slug":"Catatan","permalink":"http://fahrifirdaus.web.id/categories/Catatan/"},{"name":"Inilah Hidup","slug":"Catatan/Inilah-Hidup","permalink":"http://fahrifirdaus.web.id/categories/Catatan/Inilah-Hidup/"},{"name":"Inspirasi","slug":"Catatan/Inilah-Hidup/Inspirasi","permalink":"http://fahrifirdaus.web.id/categories/Catatan/Inilah-Hidup/Inspirasi/"}],"tags":[{"name":"inspirasi","slug":"inspirasi","permalink":"http://fahrifirdaus.web.id/tags/inspirasi/"},{"name":"kartini","slug":"kartini","permalink":"http://fahrifirdaus.web.id/tags/kartini/"},{"name":"pahlawan","slug":"pahlawan","permalink":"http://fahrifirdaus.web.id/tags/pahlawan/"},{"name":"wanita","slug":"wanita","permalink":"http://fahrifirdaus.web.id/tags/wanita/"}]},{"title":"Anehnya Rumah Sakit Sumber Waras","slug":"anehnya-rumah-sakit-sumber-waras","date":"2016-04-18T04:02:28.000Z","updated":"2016-12-22T16:46:48.000Z","comments":true,"path":"2016/04/anehnya-rumah-sakit-sumber-waras/","link":"","permalink":"http://fahrifirdaus.web.id/2016/04/anehnya-rumah-sakit-sumber-waras/","excerpt":"","text":"Ada yang aneh dalam kasus Rumah Sakit Sumber Waras. Bahasa inggrisnya adalah Hospital yang berarti tempat orang asing mendapatkan keramahan, bahasa arabnya adalah Mustasyfa yang berarti tempat penyembuhan. Kenapa dalam bahasa Indonesia disebut Rumah Sakit? ini bikin orang yang masuk jadi tambah sakit atau gimana???? Aneh, sunggguh aneh…","categories":[{"name":"Catatan","slug":"Catatan","permalink":"http://fahrifirdaus.web.id/categories/Catatan/"},{"name":"Inilah Hidup","slug":"Catatan/Inilah-Hidup","permalink":"http://fahrifirdaus.web.id/categories/Catatan/Inilah-Hidup/"}],"tags":[{"name":"rumah sehat","slug":"rumah-sehat","permalink":"http://fahrifirdaus.web.id/tags/rumah-sehat/"},{"name":"sumber waras","slug":"sumber-waras","permalink":"http://fahrifirdaus.web.id/tags/sumber-waras/"}]},{"title":"1 Abad Qudsiyyah, Membumikan GusJiGang","slug":"1-abad-qudsiyyah-membumikan-gusjigang","date":"2016-04-02T09:42:34.000Z","updated":"2016-12-23T10:05:54.000Z","comments":true,"path":"2016/04/1-abad-qudsiyyah-membumikan-gusjigang/","link":"","permalink":"http://fahrifirdaus.web.id/2016/04/1-abad-qudsiyyah-membumikan-gusjigang/","excerpt":"Beberapa teman anda atau kenalan anda mungkin ada yang sharing atau menggunakan gambar di bawah ini sebagai profpic facebook atau twitter avatar. Pastinya yang men-share, mem-posting, dan menggunakan profpic tersebut adalah keluarga besar Madrasah Qudsiyyah Kudus.","text":"Beberapa teman anda atau kenalan anda mungkin ada yang sharing atau menggunakan gambar di bawah ini sebagai profpic facebook atau twitter avatar. Pastinya yang men-share, mem-posting, dan menggunakan profpic tersebut adalah keluarga besar Madrasah Qudsiyyah Kudus. “Satu abad Qudsiyyah bertabuh, membumikan GusJiGang untuk kemandirian bangsa” adalah tagline yang diangkat dalam peringatan 100 tahun Madrasah Qudsiyyah, madrasah tempat saya menimba ilmu selama 8 tahun dari tingkat Ibtidaiyyah hingga tingkat Aliyyah. Tagline yang sangat cocok sekali diangkat di masa saat ini, ketika bangsa Indonesia sedang berusaha untuk bangkit dan berkembang menjadi negara yang mandiri dan makmur sejahtera. GusJiGang merupakan jargon dari simbah Sunan Kudus yang berarti “Lakune Bagus, Pinter Ngaji, Pinter Dagang” (Kelakuannya baik, pintar mengaji, dan pintar berdagang). Dalam artikel ini saya ingin sedikit membahas jargon tersebut secara sederhana. Kata kunci yang kita dapatkan pertama adalah “Lakune Bagus”, Kelakuan baik merupakan kunci dari pribadi yang besar. Manusia yang berilmu tinggi namun kelakuannya tidak baik malah akan membawa mafsadah yang lebih besar. Hal ini sangat senada dengan hadits yang menjelaskan bahwa diutusnya Rasulullah SAW adalah untuk menyempurnakan akhlaq. Kemudian setelah ada himmah untuk berlaku baik kata kunci yang kita dapatkan selanjutnya adalah “Pinter Ngaji”. Keinginan untuk berlaku baik saja tidak cukup, seringkali apa yang kita maksudkan baik ternyata bukanlah hal yang baik menurut orang lain, lebih repot lagi ternya tidak baik secara syar’i. Di sinilah diperlukan ilmu pengetahuan terutama ilmu pengetahuan agama untuk memastikan laku baik yang kita jalankan adalah benar-benar baik, bukan hanya baik menurut kita. Terakhir kata kunci yang diberikan adalah “Pinter Dagang”. Bukan rahasia lagi kalau kemakmuran dunia menjadi daya tarik yang kuat sekali untuk seseorang melakukan sesuatu. Seringkali yang menjadi parameter kesuksesan kita adalah kesuksesan finansial, dan sudah banyak contoh orang baik yang akhirnya bisa disetir karena kebutuhan duniawi tidak tercukupi. Bahkan Rasulullah SAW pernah bersabda yang maksudnya kurang lebih “Kefaqiran mendekatkan manusia kepada kekufuran”. Pinter dagang menjadi penting bagi kita untuk memastikan kita dapat hidup mandiri dan tidak mudah disetir oleh “penyandang dana” yang memiliki visi kesalehan yang berbeda dengan kita. Dan lebih baik lagi jika kita juga dapat mengajak orang-orang di sekitar kita untuk menjadi lebih mandiri, berdiri di atas kaki sendiri, dan makan dari hasil usaha sendiri. Ketika 3 komponen GusJiGang yang meliputi behavioral, itelligential, dan financial berpadu dengan apik dalam jatidiri sebuah bangsa, sudah tidak perlu diperdebatkan lagi bangsa tersebut tentu akan menjadi bangsa yang maju dan mandiri. Tantangannya saat ini adalah bagaimana membumikan semangat GusJiGang tersebut agar bukan hanya difahami oleh masyarakat luas, tapi juga diamalkan dengan baik. Selama di Qudsiyyah saya tidak hanya diajarkan GusJiGang, tapi juga ditunjukkan secara langsung bagaimana implementasi dari GusJiGang tersebut. Meskipun saat ini saya sendiri belum bisa benar-benar menjalankan semangat GusJiGang dengan baik, InsyaAllah dengan barokan bimbingan dan doa yang tiada henti dari Masyayikh Qudsiyyah saya akan tetap berusaha memegang teguh dan mengamalkan semangat GusJiGang dalam kehidupan sehari-hari.","categories":[{"name":"Inilah Hidup","slug":"Inilah-Hidup","permalink":"http://fahrifirdaus.web.id/categories/Inilah-Hidup/"},{"name":"Inspirasi","slug":"Inilah-Hidup/Inspirasi","permalink":"http://fahrifirdaus.web.id/categories/Inilah-Hidup/Inspirasi/"}],"tags":[{"name":"gusjigang","slug":"gusjigang","permalink":"http://fahrifirdaus.web.id/tags/gusjigang/"},{"name":"qudsiyyah","slug":"qudsiyyah","permalink":"http://fahrifirdaus.web.id/tags/qudsiyyah/"}]},{"title":"Jangan Cuma Lihat Prosesnya Tapi Lihat Juga Hasilnya","slug":"jangan-cuma-lihat-prosesnya-tapi-lihat-juga-hasilnya","date":"2015-12-14T03:01:44.000Z","updated":"2016-12-22T16:46:48.000Z","comments":true,"path":"2015/12/jangan-cuma-lihat-prosesnya-tapi-lihat-juga-hasilnya/","link":"","permalink":"http://fahrifirdaus.web.id/2015/12/jangan-cuma-lihat-prosesnya-tapi-lihat-juga-hasilnya/","excerpt":"Saya yakin banyak diantara kita yang sering mendengar jargon: Jangan hanya lihat hasilnya tapi juga lihat prosesnya Dan saya juga yakin sebagian besar dari kita setuju dengan jargon tersebut, karena memberi semangat tambahan sekaligus memberikan sudut pandang yang berbeda dalam peningkatan performa. Sayangnya, seperti banyak jargon-jargon lain jargon tersebut terkadang disalah artikan dan disalah gunakan sebagai excuse untuk pekerjaan yang hasilnya tidak terlalu baik (atau buruk).","text":"Saya yakin banyak diantara kita yang sering mendengar jargon: Jangan hanya lihat hasilnya tapi juga lihat prosesnya Dan saya juga yakin sebagian besar dari kita setuju dengan jargon tersebut, karena memberi semangat tambahan sekaligus memberikan sudut pandang yang berbeda dalam peningkatan performa. Sayangnya, seperti banyak jargon-jargon lain jargon tersebut terkadang disalah artikan dan disalah gunakan sebagai excuse untuk pekerjaan yang hasilnya tidak terlalu baik (atau buruk). Contoh, mahasiswa yang tidak bisa mengerjakan tugas dengan benar kemudian bilang ke dosennya “Pak jangan diliat hasilnya saja lho, tapi prosesnya itu pak kita udah sampe lemburan 3 hari“. Atau pegawai yang tidak mampu menyelesaikan pekerjaannya dan berapologi ke pimpinannya “Jangan hanya dilihat hasilnya pak, tapi dalam proses pengerjaannya kita sudah berjibaku lho“. Bahkan juga pedagang di pinggir jalan “Jangan cuman dilihat bentuknya yang pas-pasan bapak ibu, tapi hargailah keringat kami yang mengerjakan barang ini siang malam“. Meskipun sekilas terdengar betul, terutama karena kita sering mendengar kalimat tersebut dari motivator terkenal, contoh-contoh kalimat yang terucap tadi adalah contoh jargon yang benar namun diucapkan oleh orang yang salah untuk tujuan yang salah. Jargon jangan hanya lihat hasil bermakna kita sebagai pelaku jangan terlalu menyesali hasil yang kurang baik yang kita dapatkan, namun juga lihat apa saja efek samping (atau manfaat) yang telah kita raih dan pengalaman yang kita dapatkan selama melakukan proses. Jargon tersebut sama sekali bukan bertujuan untuk mengiba kepada orang lain untuk menghargai hasil kerja kita yang pas-pasan, jadi sama sekali tidak tepat jika diucapkan oleh pelaku kepada konsumen atau orang yang memanfaatkan hasil kerja kita. Seharusnya jargon tersebut kita ucapkan pada kita sendiri setelah berusaha belajar namun tetap mendapatkan nilai yang buruk “Tidak masalah saya mendapat hasil buruk, karena saya sudah mendapat ilmu banyak selama mata kuliah ini, dan ilmu tersebut pastilah berguna untuk saya kedepannya“, atau saat kita menghasilkan produk yang kurang baik “Nggak masalah kalo ini hasilnya ancur, yang penting saya udah tahu kalau teknik yang lebih tepat itu seperti itu. Nantinya saya akan menggunakan cara yang lebih efektif dan efisien lagi“. Dengan begitu semangat tetap terjaga dan ada evaluasi terhadap kinerja yang telah dilakukan. Menggunakan jargon jangan hanya lihat hasilnya untuk mengiba kepada orang lain memberikan efek buruk pada kita. Diantaranya, membuat kita malas untuk melakukan improvement, stagnan, dan tidak mau memperbaiki diri sendiri. Selain itu juga menimbulkan efek mudah menyalahkan orang lain bahkan untuk sesuatu yang sebenarnya adalah salah kita sendiri. So kenali waktu untuk mengucapkan “Jangan hanya lihat hasilnya tapi lihat juga prosesnya” atau “Jangan hanya lihat prosesnya tapi lihat juga hasilnya” untuk menjadi pribadi yang lebih baik.","categories":[{"name":"Catatan","slug":"Catatan","permalink":"http://fahrifirdaus.web.id/categories/Catatan/"},{"name":"Inilah Hidup","slug":"Catatan/Inilah-Hidup","permalink":"http://fahrifirdaus.web.id/categories/Catatan/Inilah-Hidup/"},{"name":"Inspirasi","slug":"Catatan/Inilah-Hidup/Inspirasi","permalink":"http://fahrifirdaus.web.id/categories/Catatan/Inilah-Hidup/Inspirasi/"}],"tags":[{"name":"hasil","slug":"hasil","permalink":"http://fahrifirdaus.web.id/tags/hasil/"},{"name":"motivasi","slug":"motivasi","permalink":"http://fahrifirdaus.web.id/tags/motivasi/"},{"name":"proses","slug":"proses","permalink":"http://fahrifirdaus.web.id/tags/proses/"}]},{"title":"S.Kom (yang) Lebih dari Lulusan SMK","slug":"s-kom-yang-lebih-dari-lulusan-smk","date":"2015-10-20T03:52:50.000Z","updated":"2016-12-22T16:46:48.000Z","comments":true,"path":"2015/10/s-kom-yang-lebih-dari-lulusan-smk/","link":"","permalink":"http://fahrifirdaus.web.id/2015/10/s-kom-yang-lebih-dari-lulusan-smk/","excerpt":"Tulisan ini saya tujukan untuk mahasiswa yang sedang belajar di S1 jurusan ilmu komputer (terutama Teknik Informatika) dan juga HRD instansi yang sedang membandingkan kualifikasi kompetensi lulusan S1 bidang komputer dan lulusan SMK jurusan komputer (atau RPL). Disclaimer yang harus disadari saya (penulis) adalah dosen Teknik Informatika, sehingga tidak aneh kalau akan lebih mengunggulkan lulusan S1 komputer dibandingkan dengan sekedar lulusan SMK. Tapi bukankah memang itu yang kita harapkan, bertambah waktu belajar bukankah semakin pinter. Pertanyaannya adalah, lebih pinternya itu lebih pinter bagian apanya, skill apa yang dimiliki lulusan S1 yang lebih dari skill lulusan SMK? Tidak bisa dipungkiri kemampuan anak SMK saat ini bisa dibilang sudah cukup mumpuni untuk bekerja secara langsung di bidang IT (pengembangan Software, manajemen jaringan, bahkan menjadi Hacker). Banyak anak-anak SMK yang sudah pinter bikin program dan setting server, bahkan banyak juga yang sudah mengerjakan proyek IT berbayar. Dari situ akhirnya banyak juga perusahaan yang lebih suka mempekerjakan lulusan SMK karena bayarannya lebih murah namun sudah memiliki skill yang cukup.","text":"Tulisan ini saya tujukan untuk mahasiswa yang sedang belajar di S1 jurusan ilmu komputer (terutama Teknik Informatika) dan juga HRD instansi yang sedang membandingkan kualifikasi kompetensi lulusan S1 bidang komputer dan lulusan SMK jurusan komputer (atau RPL). Disclaimer yang harus disadari saya (penulis) adalah dosen Teknik Informatika, sehingga tidak aneh kalau akan lebih mengunggulkan lulusan S1 komputer dibandingkan dengan sekedar lulusan SMK. Tapi bukankah memang itu yang kita harapkan, bertambah waktu belajar bukankah semakin pinter. Pertanyaannya adalah, lebih pinternya itu lebih pinter bagian apanya, skill apa yang dimiliki lulusan S1 yang lebih dari skill lulusan SMK? Tidak bisa dipungkiri kemampuan anak SMK saat ini bisa dibilang sudah cukup mumpuni untuk bekerja secara langsung di bidang IT (pengembangan Software, manajemen jaringan, bahkan menjadi Hacker). Banyak anak-anak SMK yang sudah pinter bikin program dan setting server, bahkan banyak juga yang sudah mengerjakan proyek IT berbayar. Dari situ akhirnya banyak juga perusahaan yang lebih suka mempekerjakan lulusan SMK karena bayarannya lebih murah namun sudah memiliki skill yang cukup. Apakah benar sudah cukup? Oke kita bicaranya perlu mundur lagi kembali ke pertanyaan “skill apa yang dimiliki lulusan S1 yang lebih dari skill lulusan SMK?”. Kalau dulu dosen saya bilang, lulus S.Kom bidang RPL lebih baik dari lulusan SMK bidang RPL karena lulusan “S1 mampu membuat software yang sesuai dengan kaidah-kaidah pengembangan software yang benar, mulai dari pengumpulan kebutuhan, pembuatan desain aplikasinya, hingga pengujiannya”. Saya tidak tahu dengan anda, tapi menurut saya jawaban tersebut masih terlalu abstrak. Karena saat saya kejar “memangnya kalau lulusan SMK bikinnya nggak sesuai kaidah ya pak?”, jawabannya adalah “ya sebagian sudah ikut, tapi masih kurang sesuai …”. Absurd kan? Di sini saya nggak akan bercerita tentang bidang selain rekayasa perangkat lunak, karena itu bukan bidang saya. Nggak sopan rasanya kalau saya ikutan bahas yang bukan bidang saya. Sekarang saya sudah menjadi dosen dan sudah bisa menjawab lebih detail pertanyaan tersebut. Ada beberapa skill yang (harusnya) dimiliki oleh lulusan S.Kom, namun by default tidak diajarkan di SMK. Beberapa diantaranya adalah: Loosely coupled software design Penerapan kecerdasan buatan pada software Multi Processing dengan Thread hingga Distributed System dan lain sebagainya Bagaimana, semakin absurd? Ya itu tujuan saya biar anda tidak berhenti sampai di sini membacanya. 1. Loosely Coupled Software DesignBahasa indonesianya perancangan perangkat lunak yang berhubungan secara renggang. Komponen perangkat lunak yang baik seharusnya mudah diintegrasikan dengan perangkat lunak yang lain, namun tidak terhubung secara erat dalam arti jika suatu saat komponen tersebut ingin dimasukkan pada perangkat lunak lain, developer tinggal melakukan coplok tempel. Contoh mudahnya, perusahaan AB ingin membuat aplikasi Sisfo Inventori untuk perusahaannya. Tentu saja pada aplikasi tersebut ada komponen login dan validasi otorisasi pengguna untuk memastikan yang dapat mengakses aplikasi tersebut hanya pegawai yang berhak saja. Kemudian di lain waktu perusahaan tersebut juga ingin membuat aplikasi Sisfo Keuangan dengan model login dan validasi otorisasi pengguna yang kurang lebih sama dengan aplikasi Sisfo Inventori. Desain perangkat lunak yang bagus memungkinkan developer untuk men-coplok komponen login dari Sisfo Inventori dan menempelkannya pada aplikasi Sisfo Keuangan, meskipun daftar usernya berbeda. Sedangkan desain perangkat lunak yang kurang bagus, memaksa developer untuk membuat komponen tersebut dari awal lagi (atau minimal melakukan copy-paste-edit-debug) untuk menerapkan komponen login yang sama pada aplikasi yang berbeda. Contoh komponen login saya gunakan karena (menurut saya) paling mudah dipahami, tentu saja komponen aplikasi di sebuah perusahaan tidak sesederhana komponen login. Nah skill yang harusnya dimiliki oleh lulusan S.Kom adalah mampu menganalisis proses bisnis global dan memecahnya ke dalam beberapa komponen yang independent untuk mempermudah penggunaan kembali pada kasus aplikasi yang berbeda. Penguasaan terhadap model desain ini akan mempercepat pengembangan software dan sekaligus meningkatkan kualitas dari software itu sendiri. Saya ingin membahas topik ini lebih mendalam di postingan lain. Semoga tidak lupa, InsyaAllah. 2. Penerapan Kecerdasan Buatan pada SoftwareSoftware (dan hardware) yang menggunakan kecerdasan buatan sudah banyak di sekitar kita, hanya saja sering kita tidak menyadari karena terlalu pandainya pengembang menyembunyikan kerumitan kecerdasan buatan tersebut. Konteks kecerdasan buatan yang saya maksud di sini, bukan hanya terbatas pada robot Asimo, algoritma PC Game, dan digital asisten seperti Siri saja, namun juga penerapan kecerdasan buatan pada timeline facebook, pencarian koleksi pada digital library, dan juga widget iklan yang sering kita lihat di web favorit. Jika kita hanya ngomong menyimpan data posting dan menampilkannya di timeline teman, struktur dan teknologi facebook bukanlah hal yang susah untuk dibuat. Masalahnya adalah di facebook saya punya ribuan teman dan ratusan teman diantaranya sangat aktif meng-update status. Jika semua postingan tersebut tampil di halaman saya, pastinya timeline saya penuh banget. Nah yang susah dari teknologi facebook adalah logika melakukan filter untuk hanya menampilkan postingan yang menurut facebook menarik bagi saya. Itu adalah salah satu bentuk kecerdasan buatan yang rumit namun terlihat sederhana. Nah lulusan S.Kom di Indonesia pastinya pernah mendapatkan mata kuliah yang berbau kecerdasan buatan seperti Data Mining, Machine Learning, Image Processing, atau Information Retrieval. Sehingga ketika perusahaan ingin mengembangkan software yang memerlukan komponen kecerdasan buatan, misalkan aplikasi untuk mensortir dokumen lama dan secara otomatis mengelompokkannya ke dalam kategori tertentu, atau membuat aplikasi rekomendasi penentuan harga sebuah produk berdasarkan tren harga pasar, maka pilihan yang tepat adalah mempekerjakan lulusan S.Kom. 3. Multi Processing dengan Thread hingga Distributed SystemSebuah perusahaan menengah dan besar saat ini tidak bisa lepas dengan urusan data skala besar terutama yang berhubungan dengan data transaksional pembelian harian dan manajemen dokumen. Selain itu, aplikasi modern saat ini tidak bisa dilepaskan dari proses berat yang harus dijalankan secara kontinyu namun tidak boleh mengganggu misalkan mengirimkan email newsletter berkala ke customer, atau secara berkala mengecek informasi dari web kompetitor untuk memastikan strategi yang kita pilih tidak salah. Dalam kondisi seperti itu aplikasi konvensional yang hanya mengandalkan satu processor akan menyebabkan aplikasi yang dibuat berjalan sangat lambat. Aplikasi harus dibagi ke dalam beberapa bagian dan disebar pengerjaannya ke dalam beberapa thread, processor, atau bahkan ke dalam beberapa server terpisah. Konsep ini yang kemudian dikenal dengan multiprocessing dan distributed system. Saat ini memang tidak semua S1 ilmu komputer di Indonesia mengajarkan secara aplikatif dan praktis skill pemrograman dengan multiprocessing dan distributed system, namun semakin hari adopsi terhadap kemampuan tersebut sudah semakin banyak dilakukan. Ini juga merupakan salah satu skill pembeda lulusan S1 dengan lulusan SMK. PenutupSampai di sini menurut saya sudah cukup jelas apa perbedaan skill yang dimiliki oleh lulusan S1 komputer (RPL) dengan lulusan SMK RPL. Kalau masih belum jelas mungkin kita harus diskusi lewat komentar atau japri. Nah sedikit permasalahan di sini (dan ini permasalahan klasik). Apakah semua lulusan S1 sudah memenuhi standar tersebut? Jawabannya tentu saja sangat relatif dengan kemauan dan kemampuan masing-masing lulusan. Dan sayangnya seringkali bahkan kemampuan hard skill susah untuk diukur hanya dengan ukuran IPK. Untuk mahasiswa yang merasa sudah hampir lulus tapi masih belum menguasai salah satu kemampuan di atas, berarti ada yang salah dengan anda. Mungkin tidak sepenuhnya kesalahan anda, mungkin salah di kurikulum, di dosen, atau di pergaulan anda sehari-hari. Jika anda merasa ini kesalahan dosen (yang tidak pernah menyampaikan tersebut di kelas), kejarlah dosen di luar kelas, belajar mandiri sambil berdiskusi dan brainstorming dengan dosen favorit anda adalah merupakan cara yang terbaik untuk belajar di Universitas. Yang membedakan orang yang belajar secara otodidak dan mahasiswa salah satunya adalah karena adanya bimbingan dari dosen, manfaatkanlah itu sebaik mungkin. Jangan sampai anda baru tersadar setelah lulus dan akhirnya kalah bersaing. Selanjutnya sekedar informasi untuk HRD instansi, apakah mempekerjakan lulusan SMK sudah cukup atau perlu mempekerjakan S1? Ya semuanya bergantung pada kebutuhan perusahaan anda. Jika yang diinginkan adalah developer yang sekedar bisa bikin software input data dan keluar laporan, mungkin lulusan SMK sudah cukup. Namun jika perusahaan juga mementingkan kualitas software yang dikembangkan baik dari validitas aplikasi maupun ketahanan aplikasi terhadap keamanan, perubahan data secara signifikan. Maka lulusan S1 merupakan pilihan yang lebih tepat untuk dipekerjakan.","categories":[{"name":"Catatan","slug":"Catatan","permalink":"http://fahrifirdaus.web.id/categories/Catatan/"},{"name":"Inilah Hidup","slug":"Catatan/Inilah-Hidup","permalink":"http://fahrifirdaus.web.id/categories/Catatan/Inilah-Hidup/"}],"tags":[{"name":"pemrograman","slug":"pemrograman","permalink":"http://fahrifirdaus.web.id/tags/pemrograman/"},{"name":"lulusan IT","slug":"lulusan-IT","permalink":"http://fahrifirdaus.web.id/tags/lulusan-IT/"},{"name":"rekayasa perangkat lunak","slug":"rekayasa-perangkat-lunak","permalink":"http://fahrifirdaus.web.id/tags/rekayasa-perangkat-lunak/"}]},{"title":"Tutorial Github Dasar (Windows)","slug":"tutorial-github-dasar-windows","date":"2015-09-19T07:13:18.000Z","updated":"2016-12-23T17:45:36.000Z","comments":true,"path":"2015/09/tutorial-github-dasar-windows/","link":"","permalink":"http://fahrifirdaus.web.id/2015/09/tutorial-github-dasar-windows/","excerpt":"Pada artikel sebelumnya, saya sudah menjelaskan manfaat menggunakan Github untuk membentuk curriculum vitae kita. Dan pada artikel kali ini, saya akan bertanggung jawab menjelaskan cara membuat project dan melakukan upload ke github dengan menggunakan console dan GUI. GUI Github for WindowsCara yang paling cepat untuk melakukan koneksi dan interaksi dengan Github adalah dengan menginstall Github for Windows, dan langsung create project dan singkronisasi data dengan aplikasi tersebut. Langkah-langkahnya adalah sebagai berikut:","text":"Pada artikel sebelumnya, saya sudah menjelaskan manfaat menggunakan Github untuk membentuk curriculum vitae kita. Dan pada artikel kali ini, saya akan bertanggung jawab menjelaskan cara membuat project dan melakukan upload ke github dengan menggunakan console dan GUI. GUI Github for WindowsCara yang paling cepat untuk melakukan koneksi dan interaksi dengan Github adalah dengan menginstall Github for Windows, dan langsung create project dan singkronisasi data dengan aplikasi tersebut. Langkah-langkahnya adalah sebagai berikut: Registrasi Akun github.com Gunakan browser favorit anda untuk mengakses github.com Pada tampilan awal github, kita akan disuguhi form registrasi. Lanjutkan dengan mengisikan username, email, dan password pada form registrasi tersebut dan klik tombol Sign up for Github. Langkah kedua registrasi kita akan ditawari beberapa plan untuk registrasi, untuk basic-nya kita bisa memilih free plan di pilihan paling bawah, kemudian klik Finish sign up untuk melanjutkan registrasi. Instalasi Github for Windows Selamat anda telah berhasil melakukan registrasi akun pada github.com dan bisa melanjutkan untuk Download aplikasi Github for Windows di http://windows.github.com/ Pasang dan jalankan aplikasi tersebut di komputer kita Untuk menghubungkan aplikasi github tersebut dengan akun github yang telah kita buat, klik pada menu settings (ikon gear) di kanan atas, dan pilih menu Options… Klik link + Add accounts untuk menambahkan akun anda Masukkan username dan password sesuai dengan data yang kita masukkan saat registrasi akun github. Selanjutnya adalah konfigurasi profile lokal dengan kembali lagi klik menu Options… kemudian isikan Full Name dan Email yang kita gunakan untuk daftar di github.com. Terakhir klik Save. Membuat Repositori Baru Untuk membuat repositori koding baru, klik ikon + yang ada di kiri atas aplikasi, dan pilih tab create Masukkan nama untuk repository kita, namun ingat karakter yang diterima hanya huruf, “-“ (dash), dan “_” (underscore). Aplikasi github akan memilihkan tempat default untuk repository kita. Namun, jika kita ingin menempatkan di lokasi lain, kita dapat memilih browser pada pilihan Local path. Dalam kasus saya, karena saya ingin menuliskan koding untuk pemrograman PHP, maka saya meletakkan Local path pada direktori htdocs. Setelah itu klik Create repository Selamat anda berhasil membuat repository baru. Catatan: repository baru yang kita buat akan otomatis dibuatkan file .gitattributes dan .gitignore. Biarkan saja kedua file tersebut, karena sangat berguna untuk kita nantinya. Jika ingin mengetahui lebih lanjut fungsi dari 2 file tersebut silahakan lihat dokumentasi git tentang gitattributes dan gitignore Bekerja dan Sinkronisasi PekerjaanIstilah yang digunakan dalam git adalah add, commit, dan push. Berikut adalah contoh cara untuk sinkronisasi koding yang kita buat pada repositori lokal dengan repositori github. Buka direktori repositori yang barusan kita buat Dalam direktori tersebut buatlah sebuah file bernama readme.md, kemudian tuliskan teks di bawah ini serta Simpan dan buka kembali windows explore. 123# Proyek Latihan KodingProyek ini digunakan untuk latihan koding PHP dan menyimpannya pada github. Buat satu lagi sebuah file dengan nama index.php dan tuliskan kode di bawah ini serta Simpan dan kali ini buka aplikasi github for windows. Terlihat kita memiliki 2 uncommitted changes, artinya kita memiliki 2 file yang telah dirubah / ditambahkan tapi kita belum menyimpannya pada repositori lokal. 123&lt;?php echo \"&lt;h1&gt;Hello World Biasa&lt;/h1&gt;\";?&gt; Untuk menyimpannya isikan komentar commit pada isian Summary kemudian klik Commit to master. Kita telah berhasil menyimpan pada repository lokal, selanjutnya klik tombol Publish yang ada di bagian kanan atas di bawah ikon gear. Saat pertama kali kita melakukan publish kita akan diminta untuk memasukkan Description dari repositori ini. Isikan deskripsi pada isian tersebut dan klik Publish [nama-repositori]. Jangan mencentang pilihan private repository, karena pilihan tersebut hanya untuk akun berbayar. Jika kita centang maka kita akan diminta untuk meng-upgrade akun kita. Tunggu sebentar hingga proses upload selesai (saat publish harus punya koneksi internet tentunya). Setelah proses upload berhasil, kita bisa mengecek hasil pekerjaan kita di github.com, seharusnya 2 file yang barusan kita buat sudah berhasil terunggah di repository github. Dan ya, sekarang kita tahu kode yang kita tuliskan pada readme.md menjadi dokumentasi resmi dari repository kita dengan menggunakan format markdown (penjelasan lebih lanjut tentang format markdown github dapat dibaca di halaman ini). PenutupGithub bukan hanya sekedar tool untuk menyimpan koding secara online, tapi tujuan utamanya adalah tool untuk memudahkan kolaborasi koding antar beberapa programmer. Pada artikel ini hanya dijelaskan pengenalan menggunakan github saja, sedangkan penjelasan lebih lanjut tentang penggunaan github untuk colaborative coding akan dijelaskan pada artikel selanjutnya. Atau jika anda tidak sabar, silahkan baca artikel yang sangat istimewa dari nettuts yang berjudul Team Collaboration With GitHub.","categories":[{"name":"Catatan","slug":"Catatan","permalink":"http://fahrifirdaus.web.id/categories/Catatan/"},{"name":"Tool Pemrograman","slug":"Catatan/Tool-Pemrograman","permalink":"http://fahrifirdaus.web.id/categories/Catatan/Tool-Pemrograman/"}],"tags":[{"name":"github","slug":"github","permalink":"http://fahrifirdaus.web.id/tags/github/"},{"name":"git","slug":"git","permalink":"http://fahrifirdaus.web.id/tags/git/"},{"name":"koding","slug":"koding","permalink":"http://fahrifirdaus.web.id/tags/koding/"}]},{"title":"Array dan ArrayList dalam Java","slug":"array-dan-arraylist-dalam-java","date":"2015-08-24T09:48:01.000Z","updated":"2016-12-23T16:50:46.000Z","comments":true,"path":"2015/08/array-dan-arraylist-dalam-java/","link":"","permalink":"http://fahrifirdaus.web.id/2015/08/array-dan-arraylist-dalam-java/","excerpt":"Sama seperti bahasa pemrograman lain, bahasa pemrograman java menyediakan cara untuk mengelompokkan variabel dengan tipe data sejenis dengan menggunakan Array. Hanya saja, dalam pemrograman modern tipe data array sering dirasa kurang fleksibel karena harus mendeklarasikan jumlah data di awal. Di dalam java, permasalahan tersebut diselesaikan dengan menggunakan kelas Collection. Pada artikel ini akan dibahas pengelompokan tipe data (primitif &amp; class) dengan cara konvensional menggunakan Array, dan cara yang lebih dinamis dengan menggunakan Collection (dalam artikel ini lebih spesifik ArrayList).","text":"Sama seperti bahasa pemrograman lain, bahasa pemrograman java menyediakan cara untuk mengelompokkan variabel dengan tipe data sejenis dengan menggunakan Array. Hanya saja, dalam pemrograman modern tipe data array sering dirasa kurang fleksibel karena harus mendeklarasikan jumlah data di awal. Di dalam java, permasalahan tersebut diselesaikan dengan menggunakan kelas Collection. Pada artikel ini akan dibahas pengelompokan tipe data (primitif &amp; class) dengan cara konvensional menggunakan Array, dan cara yang lebih dinamis dengan menggunakan Collection (dalam artikel ini lebih spesifik ArrayList). Array Dalam JavaUntuk dapat menggunakan array dalam java, tahap pertama yang harus dilakukan adalah deklarasi dengan menggunakan cara sebagai berikut : tipe-data identifier [] = new tipe-data[jumlah-data]; tipe-data: tipe yang ingin digunakan dan dapat berupa Class. identifier: nama variabel yang ingin dijadikan array. Tambahan “[]” untuk memberitahu compiler bahwa variabel tersebut adalah array. new [jumlah-data]: perlu dibedakan antara kata kunci new yang digunakan pada array, dan new yang digunakan pada instantiasi class. Pada array new diikuti dengan tipe data dan jumlah data yang diapit kurung kotak “[]”, sedangkan pada instantiasi class, new diikuti nama class dan kurung biasa “()” (jika terdapat parameter, perlu ditambahkan juga). Setelah deklarasi, tahap selanjutnya adalah menggunakan array tersebut dengan mengakses identifier-nya menggunakan indeks tertentu. Contoh deklarasi dan penggunaan array adalah sebagai berikut: 1234567891011121314151617181920212223public class ArrayDemo&#123; public static void main(String args[])&#123; int nilai [] = new int[5]; String nama [] = new String[5]; nilai[0] = 10; nilai[4] = 15; nilai[2] = 200; nama[1] = \"Ahmad\"; nama[0] = \"Andri\"; nama[3] = \"Anis\"; System.out.println(\"Isi dari nilai[0] adalah: \"+nilai[0]); int jumlah = nilai[4] + nilai[2]; System.out.println(\"Jumlahnya adalah: \"+jumlah); System.out.println(\"Nama pertama adalah: \"+nama[0]); System.out.println(\"Nama keempat adalah: \"+nama[3]); System.out.println(\"Nama kedua adalah: \"+nama[1]); &#125;&#125; Jika program tersebut dijalankan, maka akan menghasilkan output sebagai berikut: 12345Isi dari nilai[0] adalah: 10Jumlahnya adalah: 215Nama pertama adalah: AndriNama keempat adalah: AnisNama kedua adalah: Ahmad Lebih lanjut tentang array dalam Java dapat dibaca pada : Java Arrays (tutorialspoint) Introduction to Programming in Java (Array) Menggunakan Collection ArrayListSeperti dijelaskan sebelumnya, kelemahan dari Array konvensional adalah ukurannya harus sudah ditentukan pada waktu deklarasi. Jika tipe data Array ini digunakan untuk menyimpan data yang ukurannya tidak dapat ditentukan, tentunya akan sangat repot untuk pendeklarasiannya. Mulai dari Java versi 5 (kalau nggak salah), Java menambahkan library khusus untuk dapat menyimpan kumpulan tipe data dengan ukuran yang dinamis, yaitu Collection. Sebenarnya ada beberapa Class yang masuk dalam Collection ini, antara lain LinkedList, ArrayList, HashSet, TreeSet, dan lain sebagainya. Pada artikel ini, implementasi tipe Collection yang akan dijelaskan hanya ArrayList saja. Sama seperti array (dan semua jenis variabel yang lain), ada dua tahap penggunaan ArrayList, yaitu deklarasi dan penggunaan. Cara pendeklarasian ArrayList adalah sebagai berikut: 123import java.util.ArrayList;// ... ... ...ArrayList identifier = new ArrayList(); import …: untuk dapat menggunakan ArrayList kita harus mengimport dari java.util.ArrayList, jika tidak compiler tidak akan mengenali class tersebut. ArrayList: tipe data yang digunakan juga bisa berupa Class. new ArrayList(): karena ArrayList adalah sebuah class, maka new pada bagian ini bisa kita anggap sebagai instantiasi. Yang di-instantiasikan adalah ArrayList dengan tipe data yang diinginkan. Setelah dideklarasikan ArrayList, kita dapat menambahkan data pada ArrayList dengan menggunakan indentifier.add(data) dan mendapatkan data yang telah disimpan dengan menggunakan indentifier.get(indeks). Cukup mudah bukan? Ukuran dari ArrayList akan berkembang dan menyusut sesuai dengan data yang dimasukkan. Jika kita ingin mengetahui jumlah data yang telah dimasukkan ke dalam ArrayList, kita dapat menggunakan perintah indentifier.size(). Contoh aksi ArrayList dalam sebuah program Java dapat dilihat pada koding di bawah ini: 12345678910111213141516171819202122232425262728293031323334import java.util.ArrayList;public class ArrayListDemo&#123; public static void main(String [] args)&#123; ArrayList nilai = new ArrayList(); ArrayList nama = new ArrayList(); nilai.add(5); nilai.add(20); nilai.add(14); nilai.add(90); nama.add(\"Kamto\"); nama.add(\"Sri\"); nama.add(\"Narto\"); nama.add(\"Siti\"); nama.add(\"Andarini\"); nama.add(\"Sukma\"); int jumlah = nilai.get(0)+nilai.get(2); System.out.println(\"Nilai ke 1 ditambah nilai ke 3 = \"+jumlah); System.out.println(\"Nama ke 3 adalah \"+nama.get(2)); System.out.println(\"Nama ke 5 adalah \"+nama.get(4)); System.out.println(\"Jumlah nama yang dimasukkan adalah \"+nama.size()); System.out.println(\"Semua nama yang dimasukkan adalah:\"); for(int i = 0; i &amp;lt; nama.size(); i++)&#123; System.out.println(\"Nama ke \"+(i+1)+\" adalah \"+nama.get(i)); &#125; &#125;&#125; Jika program tersebut dijalankan, maka hasilnya adalah seperti di bawah ini : 1234567891011Nilai ke 1 ditambah nilai ke 3 = 19Nama ke 3 adalah NartoNama ke 5 adalah AndariniJumlah nama yang dimasukkan adalah 6Semua nama yang dimasukkan adalah:Nama ke 1 adalah KamtoNama ke 2 adalah SriNama ke 3 adalah NartoNama ke 4 adalah SitiNama ke 5 adalah AndariniNama ke 6 adalah Sukma Masih banyak fitur dari ArrayList dan Colection yang belum saya bahas di sini, termasuk diantaranya penggunaan foreach pada Collection. Jika ingin mempelajari Collection dan ArrayList lebih lanjut dapat membaca link berikut: Java - The ArrayList Class 10 example of using ArrayList in Java Oke, sepertinya cukup sekian dulu penjelasan tentang kumpulan tipe data / obyek dalam Java. Semoga cukup jelas dan dapat bermanfaat. Jika ada pertanyaan lebih lanjut, bisa ditanyakan di bagian komentar.","categories":[{"name":"Akademis","slug":"Akademis","permalink":"http://fahrifirdaus.web.id/categories/Akademis/"},{"name":"Pemrograman Berorientasi Obyek","slug":"Akademis/Pemrograman-Berorientasi-Obyek","permalink":"http://fahrifirdaus.web.id/categories/Akademis/Pemrograman-Berorientasi-Obyek/"}],"tags":[{"name":"array","slug":"array","permalink":"http://fahrifirdaus.web.id/tags/array/"},{"name":"arraylist","slug":"arraylist","permalink":"http://fahrifirdaus.web.id/tags/arraylist/"},{"name":"collection","slug":"collection","permalink":"http://fahrifirdaus.web.id/tags/collection/"},{"name":"java","slug":"java","permalink":"http://fahrifirdaus.web.id/tags/java/"}]},{"title":"Android UI - 1. Linear Layout","slug":"android-ui-1-linear-layout","date":"2015-08-24T08:19:56.000Z","updated":"2016-12-23T17:21:04.000Z","comments":true,"path":"2015/08/android-ui-1-linear-layout/","link":"","permalink":"http://fahrifirdaus.web.id/2015/08/android-ui-1-linear-layout/","excerpt":"Tutorial ini merupakan tutorial pertama seri desain dasar aplikasi mobile dengan Android. Semoga setelah ini sempat melanjutkan sampai target mengombinasikan beberapa prinsip layout menjadi aplikasi mobile berbasis android utuh. Oke, tidak perlu panjang lebar, langsung menuju ke topik pertama yaitu Linear Layout. Desain tampilan antarmuka (UI) pada aplikasi mobile cukup berbeda dengan aplikasi desktop. Alasan terbesar yang membedakan keduanya adalah ukuran layar perangkat mobile yang relatif terbatas. Sebab itulah, kebanyakan layout dari aplikasi mobile cenderung sederhana agar tidak menghabiskan tempat. Diantara prinsip layout sederhana yang digunakan pada aplikasi mobile, salah satu yang paling mudah dibuat adalah Linear Layout Pada prinsipnya Linear Layout adalah menempatkan komponen visual secara berjejer (baik secara horizontal, maupun vertikal) dengan ukuran yang sama. Dalam android caranya cukup mudah, yaitu buat View LinearLayout sebagai container, kemudian masukkan semua komponen di dalam View LinearLayout tersebut. Secara singkat, urutan penggunaan LinearLayout dalam Android adalah sebagai berikut:","text":"Tutorial ini merupakan tutorial pertama seri desain dasar aplikasi mobile dengan Android. Semoga setelah ini sempat melanjutkan sampai target mengombinasikan beberapa prinsip layout menjadi aplikasi mobile berbasis android utuh. Oke, tidak perlu panjang lebar, langsung menuju ke topik pertama yaitu Linear Layout. Desain tampilan antarmuka (UI) pada aplikasi mobile cukup berbeda dengan aplikasi desktop. Alasan terbesar yang membedakan keduanya adalah ukuran layar perangkat mobile yang relatif terbatas. Sebab itulah, kebanyakan layout dari aplikasi mobile cenderung sederhana agar tidak menghabiskan tempat. Diantara prinsip layout sederhana yang digunakan pada aplikasi mobile, salah satu yang paling mudah dibuat adalah Linear Layout Pada prinsipnya Linear Layout adalah menempatkan komponen visual secara berjejer (baik secara horizontal, maupun vertikal) dengan ukuran yang sama. Dalam android caranya cukup mudah, yaitu buat View LinearLayout sebagai container, kemudian masukkan semua komponen di dalam View LinearLayout tersebut. Secara singkat, urutan penggunaan LinearLayout dalam Android adalah sebagai berikut: Buat Activity baru (atau Android Project baru ). Akses file XML layout dalam direktori res -&gt; layout. Hapus semua isi pada file XML layout tersebut dan ganti dengan View LinearLayout. Untuk memastikan LinearLayout diterapkan pada seluruh area, pastikan atribut layout_width dan layout_height bernilai match_parent. Tentukan orientasi yang diinginkan, Horizontal atau Vertical. Tambahkan komponen yang diperlukan ke dalam Layout. Jika anda pernah mengembangkan aplikasi dengan AndroidSDK sebelumnya, saya rasa instruksi singkat di atas sudah cukup jelas. Tapi jika memang belum jelas, atau anda belum memiliki pengalaman yang cukup dalam pengembangan Android, baiklah saya akan berbaik hati menjelaskannya. 1. Buat Activity / Project BaruOke untuk yang bagian ini langsung straight forward aja, pilih menu File - New - Android Application Project. Inputkan Application Name, Project Name, dan Package Name sesuai keinginan, kemudian klik Next - Next - Next -Next. Pada form inputan Activity Name isikan “LinearDemo” dan pada Layout Name isikan activity_linear_demo. Selesai klik Finish. 2. Akses file LayoutSemua file layout pada Android Project selalu disimpan pada direktori res - layout. Pada direktori tersebut, carilah file layout yang sesuai (dalam kasus ini, jika anda menurut pada saya berarti nama file-nya adalah activity_linear_demo.xml), double klik untuk membuka file tersebut. By default (jika anda menggunakan Eclipse), IDE Eclipse akan menampilkan file layout dalam mode grafis. Jika anda masih ingin membaca tutorial ini, saya sarankan anda untuk menggunakan mode XML editor saja. Saya malas kalau harus membuat tutorial drag and drop mode grafis, terlalu banyak capture membuat jari-jari capek. 3. Hapus dan Ganti dengan LinearLayoutSekali lagi, Eclipse emang sok pinter. By default, Eclipse langsung memberikan RelativeLayout sebagai layout dasar tampilan, padahal tidak setiap hari kita mau menggunakan RelativeLayout. Jadi pekerjaan selanjutnya adalah menghapus semua isi dari file XML tersebut dan menggantinya dengan LinearLayout seperti ditunjukkan kode di bawah ini : 123&lt;xml&gt; &lt;/xml&gt; 4. Width dan Height Match ParentPada kode sebelumnya memang sudah saya tuliskan android:layout_width = &quot;match_parent&quot; dan juga android:layout_height=&quot;match_parent&quot;, tapi untuk memastikan aja barangkali anda kelewatan menuliskannya. Kode tersebut memastikan layout kita memang dipakai seluruh halaman. 5. Tentukan OrientasiYa sama seperti poin sebelumnya, sepertinya saya memang terlalu paranoid. Pastikan anda sudah menambahkan atribut android:orientation=&quot;vertical&quot; untuk membuat komponen yang ditambahkan berjajar secara urut dari atas ke bawah. Tapi kalau anda ingin urut dari kiri ke kanan, berarti ubah nilainya menjadi horizontal. 6. Tambahkan Komponen LainTahap terakhir adalah menambahkan komponen (apapun sesuka anda). Biasanya saya suka menambahkan beberapa button, tapi jika anda tidak memiliki selera yang sama dengan saya, anda boleh juga menambahkan komponen lain seperti EditText, TextView, atau bahkan Spinner. Dalam project saya hasil akhir kode dari layout adalah seperti di bawah ini: 123&lt;xml&gt; &lt;/xml&gt; dan saat dijalankan hasilnya seperti di bawah ini: Loh kok cuman gitu? Ya karena ini hanya tutorial awal cara menggunakan LinearLayout saja, kita belum sampai membahas menggunakan style dan komponen desain UI lain untuk mempercantik tampilan. Tunggu saja tutorial berikutnya.","categories":[{"name":"Pemrograman Mobile","slug":"Pemrograman-Mobile","permalink":"http://fahrifirdaus.web.id/categories/Pemrograman-Mobile/"}],"tags":[{"name":"android","slug":"android","permalink":"http://fahrifirdaus.web.id/tags/android/"},{"name":"linearlayout","slug":"linearlayout","permalink":"http://fahrifirdaus.web.id/tags/linearlayout/"},{"name":"tutorial","slug":"tutorial","permalink":"http://fahrifirdaus.web.id/tags/tutorial/"}]},{"title":"Sugar ORM: Manipulasi Database pada Android Secara Mudah","slug":"sugarorm-manipulasi-database-pada-android-secara-mudah","date":"2015-08-24T06:04:34.000Z","updated":"2016-12-23T17:36:22.000Z","comments":true,"path":"2015/08/sugarorm-manipulasi-database-pada-android-secara-mudah/","link":"","permalink":"http://fahrifirdaus.web.id/2015/08/sugarorm-manipulasi-database-pada-android-secara-mudah/","excerpt":"Pada waktu belajar untuk mengajar manipulasi basis data (SQL) lokal dengan menggunakan Android, saya membaca cukup benyak tutorial yang berhubungan dengan topik tersebut. Sekian banyak tutorial yang saya baca akhirnya saya menyimpulkan koneksi basis data lokal pada pemrograman Android bisa dibilang cukup (kalau bukan sangat) ribet. Iseng-iseng saya mencari tutorial manipulasi basis data pada Android dengan menggunakan keyword yang lain, yaitu “Android ORM” dan hasilya ternyata cukup menggembirakan. Ada beberapa pilihan ORM untuk basis data android dan salah satunya yang menarik perhatian saya adalah Sugar ORM. Insanely easy way to work with Android Databases, itulah jaminan yang diberikan.","text":"Pada waktu belajar untuk mengajar manipulasi basis data (SQL) lokal dengan menggunakan Android, saya membaca cukup benyak tutorial yang berhubungan dengan topik tersebut. Sekian banyak tutorial yang saya baca akhirnya saya menyimpulkan koneksi basis data lokal pada pemrograman Android bisa dibilang cukup (kalau bukan sangat) ribet. Iseng-iseng saya mencari tutorial manipulasi basis data pada Android dengan menggunakan keyword yang lain, yaitu “Android ORM” dan hasilya ternyata cukup menggembirakan. Ada beberapa pilihan ORM untuk basis data android dan salah satunya yang menarik perhatian saya adalah Sugar ORM. Insanely easy way to work with Android Databases, itulah jaminan yang diberikan. Catatan: Singkatnya ORM adalah teknik pemrograman untuk memetakan basis data relasional ke dalam Object Oriented. Bagi yang ingin memahami lebih lanjut apa itu Object Relational Maping (ORM), bisa membaca deskripsi di halaman wikipedia ini. Karena pada halaman resminya belum ada tutorial penggunaan secara penuh, artikel ini saya tujukan untuk memberikan penjelasan penggunaan Sugar ORM langkah demi langkah secara tepat dan jelas. Oke, untuk membuktikan Sugar ORM dapat digunakan secara insanely easy saya akan membarikan perbandingan dengan manipulasi basis data pada android secara konvensional. Saya akan membuat aplikasi yang sama persis dengan aplikasi yang dibuat pada tutorial dari AndroidHive. Selanjutnya anda bisa memutuskan, mana cara yang lebih mudah. Persiapan Pembuatan Project Yang pertama kali dilakukan untuk menggunakan Sugar ORM tentu saja download library-nya di sini. Sebagai catatan, sewaktu saya mendownload pustaka tersebut nama file-nya adalah sugar-1.2.jar.zip, untuk dapat digunakan kita harus me-rename-nya menjadi sugar-1.2.jar Selanjutnya mari kita membuat project baru pada eclipse ADT, dan saya tidak akan menjelaskan bagaimana caranya, kalau anda masih belum tahu cara membuat project android melalui Eclipse ADT, silahkan tutup dulu artikel ini dan baca dulu artikel dasar pembuatan aplikasi Android. Persiapan selanjutnya adalah memasukkan memasukkan _library _SugarORM yang telah didownload pada folder libs pada project kita. Cara yang paling mudah adalah melakukan drag and drop dari file explorer OS kita (jika menggunakan windows berarti Windows Explorer) ke folder libs pada project kita. Cara yang sedikit ribet, klik kanan pada project kita, pilih _Build Path → Add External Archives, _kemudian pilih file sugar-1.2.jar yang sudah kita download. Persiapan terakhir adalah menambahkan sedikit kode pada AndroidManifest.xml. Tidak banyak kok, cukup tambahkan attribute android:name=&quot;com.orm.SugarApp&quot; dan beberapa elemen meta-data seperti ditunjukkan pada kode di bawah ini. 1234567891011121314&lt;application android:icon=\"@drawable/ic_launcher\" android:label=\"@string/app_name\" android:theme=\"@style/AppTheme\" android:name=\"com.orm.SugarApp\" &gt; &lt;meta-data android:name=\"DATABASE\" android:value=\"contactsManager.db\" /&gt; &lt;meta-data android:name=\"VERSION\" android:value=\"1\" /&gt; &lt;meta-data android:name=\"QUERY_LOG\" android:value=\"true\" /&gt; &lt;meta-data android:name=\"DOMAIN_PACKAGE_NAME\" android:value=\"fahri.lat.sugarcontact.tables\" /&gt; ......&lt;/application&gt; **Penjelasan:** * Attribut `android:name=&quot;com.orm.SugarApp&quot;` untuk memberitahukan bahwa aplikasi ini adalah SugarApp. * Metadata Database untuk memberikan nama file penyimpanan basis data. * Metadata Version untuk memberitahukan versi basis data yang kita buat. * Metadata Query_Log untuk mengindikasikan apakah kita ingin melakukan log terhadap query yang dieksekusi. * Metadata Domain_Package_Name sebagai kontrak awal bahwa class ORM yang merepresentasikan tabel basis data disimpan pada package tersebut. Oke, setelah selesai persiapannya, saatnya kita membuat class ORM untuk representasi tabelnya. Buat Class ORMSeperti pada ORM lain, dalam Sugar ORM tiap tabel pada basis data direpresentasikan oleh sebuah class, sedangkan kolomnya direpresentasikan ke dalam attribute. Agar dapat bekerja dengan baik, class representasi tabel harus melakukan extends terhadap class SugarRecord. Lebih jelasnya, buatlah Class baru (class biasa) dengan nama Contact, dan ingat sesuai kontrak kita pada android manifest, simpan semua class table pada package fahri.lat.sugarcontact.tables. Selanjutnya tuliskan kode berikut pada class Contact. 12345678910111213141516171819import android.content.Context;import com.orm.SugarRecord;public class Contact extends SugarRecord&lt;Contact&gt; &#123; public String name; public String phoneNumber; public Contact(Context arg0) &#123; super(arg0); &#125; public Contact(Context arg0, String name, String phoneNumber) &#123; super(arg0); this.name = name; this.phoneNumber = phoneNumber; &#125;&#125; Penjelasan: Agar class Contact yang kita buat merepresentasikan sebuah tabel bernama Contact pada basis data, kita harus melakukan extends SugarRecord seperti yang ditunjukkan pada baris 4. Jangan lupa sebelumnya kita harus melakukan import library tersebut seperti yang ditunjukkan pada baris ke 2. Dua atribut yang dituliskan pada baris ke 5 dan 6 akan di-_transform _menjadi kolom pada tabel Contact. Sengaja kedua attribute tersebut dibuat public untuk memudahkan pengaksesan. Kita tidak perlu membuat kolom id, karena kolom tersebut akan di-generate secara otomatis oleh SugarORM. By default, setiap kita meng-_extend _SugarRecord kita akan diminta untuk membuat satu constructor yang memiliki parameter Context. Di dalam contoh tersebut, kita membuat 2 parameter. Satu constructor yang hanya memiliki 1 parameter Context saja dan satu constructor dengan parameter Context dan attribute yang lain. That’s it, hanya cukup itu yang dilakukan dan kita sudah dapat memanipulasi basis data dengan satu tabel tersebut semau kita. Saatnya ORM BeraksiOke, sama seperti yang dicontohkan pada tutorial dari AndroidHive, saya tidak akan mengubah tampilan apapun pada activity, saya hanya akan langsung mengisikan data pada basis data dan menampilkan data tersebut. Tambahkan baris perintah berikut pada activity utama: 123456789101112131415161718192021222324252627282930public class MainActivity extends Activity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Contact.deleteAll(Contact.class); Log.d(\"Insert: \", \"Inserting ..\"); Contact contact1 = new Contact(this, \"Ravi\", \"9100000000\"); Contact contact2 = new Contact(this, \"Srinivas\", \"9199999999\"); Contact contact3 = new Contact(this, \"Tommy\", \"9522222222\"); Contact contact4 = new Contact(this, \"Karthik\", \"9533333333\"); contact1.save(); contact2.save(); contact3.save(); contact4.save(); Log.d(\"Reading: \", \"Reading all contacts..\"); List&lt;Contact&gt; contacts = Contact.listAll(Contact.class); for (Contact cn : contacts) &#123; String log = \"Id: \"+cn.getId()+\" ,Name: \" + cn.name + \" ,Phone: \" + cn.phoneNumber; Log.d(\"Name: \", log); &#125; &#125; ....&#125; Pada Activity tersebut kita hanya melakukan penyimpanan data ke dalam basis data dan menampilkan data yang telah tersimpan ke dalam Log. It’s as simple as that. PenutupOke, seperti itulah dasar manipulasi basis data pada aplikasi Android dengan menggunakan Sugar ORM. Menurut saya cara tersebut jauh lebih sederhana dibandingkan cara konvensional menggunakan DatabaseHandler dan lain sebagainya. Kalau menurut anda lebih sederhana cara konvensional, oke saya tidak akan memaksakan pendapat. Ya betul, tutorial ini memang masih sangat sederhana, karena tujuan dari tutorial ini adalah menunjukkan dasar penggunaan Sugar ORM dan me-rewrite aplikasi kontak yang didapatkan dari AndroidHive. Di tutorial selanjutnya (bila sempat) akan saya tunjukkan bagaimana melakukan operasi basis data yang lebih kompleks dengan menggunakan SugarORM, (bisa saja) meliputi relasi tabel, melakukan query lanjut, bekerja dengan ArrayAdapter, dan lain sebagainya. Aplikasi penuh dapat di-download melalui halaman github saya [di sini]. Terima Kasih, Semoga Bermanfaat.","categories":[{"name":"Akademis","slug":"Akademis","permalink":"http://fahrifirdaus.web.id/categories/Akademis/"},{"name":"Catatan","slug":"Akademis/Catatan","permalink":"http://fahrifirdaus.web.id/categories/Akademis/Catatan/"},{"name":"Pemrograman Mobile","slug":"Akademis/Catatan/Pemrograman-Mobile","permalink":"http://fahrifirdaus.web.id/categories/Akademis/Catatan/Pemrograman-Mobile/"}],"tags":[{"name":"android","slug":"android","permalink":"http://fahrifirdaus.web.id/tags/android/"},{"name":"tutorial","slug":"tutorial","permalink":"http://fahrifirdaus.web.id/tags/tutorial/"},{"name":"database","slug":"database","permalink":"http://fahrifirdaus.web.id/tags/database/"},{"name":"orm","slug":"orm","permalink":"http://fahrifirdaus.web.id/tags/orm/"},{"name":"sugarorm","slug":"sugarorm","permalink":"http://fahrifirdaus.web.id/tags/sugarorm/"}]},{"title":"Github, Curriculum Vitae untuk Programmer","slug":"github-curriculum-vitae-untuk-programmer","date":"2015-02-17T06:27:53.000Z","updated":"2016-12-23T17:27:12.000Z","comments":true,"path":"2015/02/github-curriculum-vitae-untuk-programmer/","link":"","permalink":"http://fahrifirdaus.web.id/2015/02/github-curriculum-vitae-untuk-programmer/","excerpt":"Sewaktu saya kuliah, saya sering mengajak temen-temen untuk nge-Blog. Karena blogging adalah sarana yang sangat mudah dan murah untuk latihan menulis sambil menunjukkan isi kepala pada publik, nge-Blog adalah cara mudah untuk menampilkan kualitas pemikiran dan komunikasi kita kepada calon klien, blogging itu sangat bermanfaat untuk mahasiswa dan hampir untuk semua orang. Pak Romi sudah menjelaskan secara lengkap betapa kerennya nge-Blog di tulisan beliau, dan sepertinya tidak perlu saya tambahi lagi. Problem kemudian muncul saat saya mengajak temen-temen mahasiswa programmer yang notebene-nya lebih suka ngomong sama komputer dibandingkan sama orang, lebih pinter ngomong bahasa Python dibandingkan ngomong bahasa Indonesia, langsung berada di zona nyaman saat membuka IDE tapi langsung grogi saat berhadapan dengan cewek #ups. Jangan untuk menulis blog, bahkan untuk merangkai kalimat 1 paragraf aja udah mumet.","text":"Sewaktu saya kuliah, saya sering mengajak temen-temen untuk nge-Blog. Karena blogging adalah sarana yang sangat mudah dan murah untuk latihan menulis sambil menunjukkan isi kepala pada publik, nge-Blog adalah cara mudah untuk menampilkan kualitas pemikiran dan komunikasi kita kepada calon klien, blogging itu sangat bermanfaat untuk mahasiswa dan hampir untuk semua orang. Pak Romi sudah menjelaskan secara lengkap betapa kerennya nge-Blog di tulisan beliau, dan sepertinya tidak perlu saya tambahi lagi. Problem kemudian muncul saat saya mengajak temen-temen mahasiswa programmer yang notebene-nya lebih suka ngomong sama komputer dibandingkan sama orang, lebih pinter ngomong bahasa Python dibandingkan ngomong bahasa Indonesia, langsung berada di zona nyaman saat membuka IDE tapi langsung grogi saat berhadapan dengan cewek #ups. Jangan untuk menulis blog, bahkan untuk merangkai kalimat 1 paragraf aja udah mumet. Kalau dulu (waktu saya kuliah) saya nggak tahu harus jawab apa, tapi sekarang jawabannya sudah jelas, Github. Oke bukan cuman github, ada BitBucket ada Google Code, ada SourceForge, dan berbagai macam Online Source Code Repository Tapi menurut saya (penilaian subyektif) yang paling simpel dan desainnya paling mudah dinavigasikan adalah Github. Github dan SemacamnyaGithub adalah Source Code repository berbasis git yang dapat digunakan secara gratis untuk menyimpan source code pemrograman kita dan mempublikasikannya secara bebas. Gratis, iya gratis dan kita boleh menyimpan sebanyak apapun source code di Github. Github sering digunakan oleh pengembang perangkat lunak sumber terbuka (Open Source Software-OSS) untuk mempublikasikan kode mereka, dan mengundang programmer lain untuk menguji coba dan meningkatkan kualitas dari kode tersebut. Sebenarnya Git (source code management yang digunakan Github) adalah salah satu jenis Revision Control System yang digunakan kelompok programmer untuk mengatur penulisan dan pengeditan source code program yang dikerjakan bersama-sama. Dengan menggunakan Revision Control seperti Git, SVN, CVS, Mercurial, dan lain sebagainya programmer yang bekerja secara kelompok bisa membuat beberapa versi kode yang dikerjakan oleh sertiap individu, kemudian project manager dapat menggabungkan semua versi kode tersebut ke dalam sebuah software yang utuh dengan terlebih dahulu mengecek kesesuaian satu versi dengan versi yang lain agar tidak terjadi Error setelah digabungkan. Github menyediakan server sentral untuk source code management tersebut secara online berbasis cloud, sehingga programmer tidak harus membangun server sendiri untuk menggabungkan versi kode yang telah dipisahkan. Selain itu, github juga memberikan antarmuka untuk publikasi dan kolaborasi koding yang memudahkan pengembang OSS untuk mencari partner untuk mengembangkan software bersama-sama, atau sekedar memberikan sumbang saran pada software yang sedang dikembangkan. After all, original author dari Git adalah Linus Torvald si pembuat kernal GNU/Linux, pastilah semangat untuk memfasilitasi OpenSource Project selalu ada pada software buatannya. Selain menyediakan skema gratis untuk posting unlimited numbers of OpenSource projects, Github juga menyediakan ruang untuk pengguna menyimpan source code proyek mereka secara private, yang berarti source code tersebut hanya dapat diakses oleh pengguna yang bersangkutan dan pengguna lain yang diberikan hak akses oleh original owner. Sayangnya fitur ini tidak tersedia secara gratis, kita harus membayar untuk menggunakan fitur tersebut. Meski demikian, jika anda masih berstatus sebagai pelajar (atau mahasiswa) anda bisa mendaftar Github Student Pack untuk menjadi premium member secara gratis. Github untuk Curriculum VitaeSekarang saatnya saya harus mengaku, meskipun tujuan awal dibuatnya Github adalah untuk colaborative coding, tapi saya sendiri jarang menggunakannya untuk keperluan tersebut. Saya lebih sering menggunakannya untuk hosting coding pribadi, untuk hosting materi kuliah yang berhubungan dengan pemrograman, dan juga untuk cloud repository yang bisa saya akses di mana saja dengan menggunakan komputer/laptop siapa saja. Dan tentu saja saya gunakan untuk menjawab pertanyaan “Seberapa canggih kamu menguasai bahasa pemrograman / framework A, B, C, D?”. Biarkan kode berbicara, karena jika kita tipe programmer yang tidak suka berbicara / menulis, menjelaskan hal yang simpel bisa menjadi kompleks dan susah dipahami. Tapi saat kode sudah berbicara dengan menggunakan relasi antar Class &amp; Object yang cantik, penggunaan algoritma yang efisien, dan struktur koding yang mudah diikuti &amp; dibaca oleh programmer lain, secara utuh koding kita sudah dapat mempresentasikan kemampuan kita. Di luar negeri sudah banyak perusahaan yang meminta calon developer untuk melampirkan profil LinkedIn dan halaman Github saat mendaftar kerja. Alasannya tentu saja untuk mempermudah perusahaan mensortir calon pendaftar berdasarkan pengalaman kerja (which is coding and coding) dan kemampuan mereka untuk berkolaborasi dengan developer lain. Bahkan jika koding yang diposting ke github masih belum terlalu cantik, perusahaan bisa mengidentifikasi seberapa kuat keinginan programmer untuk memperbaiki kode yang dibuat dengan melihat history frekuensi commit yang dilakukan. Iya, Github menyediakan bukan hanya tempat repositori penyimpanan source code, namun juga data statistik dan histori yang berhubungan dengan repositori tersimpan. Melalui github kita bisa mengetahui seberapa aktif seorang programmer melakukan update pada kode-nya, berapa jumlah repository yang sudah diupload, berapa bintang yang diberikan untuk tiap repositori, berapa orang yang telah menyalin dan mengembangkan repositori tersebut, bahkan juga seberapa aktif seorang programmer berkontribusi pada repositori yang dibuat oleh orang lain. Dan semua informasi itu disediakan secara otomatis oleh github tanpa perlu kita input secara manual, yang perlu kita lakukan adalah koding dan posting source code software sebaik yang kita bisa. Awal menggunakan github saya berfikir hanya source code tertentu (berkualitas tinggi) yang pantas saya upload ke Github, nyatanya banyak sekali mahasiswa &amp; programmer pemula yang juga meng-upload hasil latihan dan tugas kuliah mereka ke Github. Dan iya, kenapa tidak? sekali kerja kita menyelesaikan tugas dosen sekaligus membangun track record secara online. Kalaupun awalnya kode kita masih amburadul, selalu ada waktu untuk mengedit kode untuk menampilkan versi yang lebih baik. PenutupSaya tidak akan mengatakan komunikasi interpersonal tidak diperlukan bagi seorang programmer. Kemampuan berkomunikasi dengan orang lain untuk menerjemahkan konsep teknis agar dapat dipahami oleh orang non teknis masih teramat sangat penting. Bahkan jika 1/3 penduduk di dunia ini adalah programmer, harus disadari bahwa 2/3 lainnya adalah non programmer yang tidak paham bahasa teknis. Keberhasilan perusahaan software raksasa dunia bukan hanya karena faktor software yang bagus, namun hasil lobying yang kuat dan kemampuan presentasi yang bagus. Saya hanya ingin menunjukkan jalan alternatif bagi programmer yang belum percaya diri, atau belum punya waktu untuk menulis blog karena terlalu sibuk koding, kenapa tidak melakukan branding diri dengan cara yang programmer banget. Gunakan Github. Akhirnya, sepertinya tidak afdhol kalau saya hanya ngomong tanpa menjalankan sendiri. So di penutup ini saya juga akan melampirkan profil dan halaman Github Saya, supaya pembaca juga bisa mengetahui, kira-kira sampai sejauh mana kemampuan koding saya. Meskipun ummmmm… sebenarnya yang saya buat public di Github kebanyakan hanya beberapa project hoby setengah jadi dan bukan real software yang dijual (ya confidentiality issue tentu saja). So this is me: Nama Lengkap: Fahri Firdausillah Almamater: Qudsiyyah (Pendidikan Dasar), UDINUS (TI-S1), UTeM (Database Technology-S2) Spesialisasi: Bahasa Pemrograman: PHP, Python, Java, HTML5 Framework: CodeIgniter (PHP), Laravel (PHP), Django (Python) Halaman Github: https://github.com/kaqfa","categories":[{"name":"Algoritma","slug":"Algoritma","permalink":"http://fahrifirdaus.web.id/categories/Algoritma/"},{"name":"Catatan","slug":"Algoritma/Catatan","permalink":"http://fahrifirdaus.web.id/categories/Algoritma/Catatan/"},{"name":"Inspirasi","slug":"Algoritma/Catatan/Inspirasi","permalink":"http://fahrifirdaus.web.id/categories/Algoritma/Catatan/Inspirasi/"}],"tags":[{"name":"curiculum vitae","slug":"curiculum-vitae","permalink":"http://fahrifirdaus.web.id/tags/curiculum-vitae/"},{"name":"github","slug":"github","permalink":"http://fahrifirdaus.web.id/tags/github/"},{"name":"programming","slug":"programming","permalink":"http://fahrifirdaus.web.id/tags/programming/"}]},{"title":"Seni Pemrograman Modern","slug":"seni-pemrograman-modern","date":"2015-02-09T10:19:33.000Z","updated":"2016-12-23T17:34:16.000Z","comments":true,"path":"2015/02/seni-pemrograman-modern/","link":"","permalink":"http://fahrifirdaus.web.id/2015/02/seni-pemrograman-modern/","excerpt":"Intro …Tahun lalu saya pernah diminta untuk mengisi kuliah umum di Universitas Muria Kudus, saat itu materi yang saya tawarkan (dan diterima oleh panitia) adalah “The Art of Modern Programming“. Sebenernya kalau dipikir juga nggak modern-modern amat sih, materi yang saya sampaikan sudah ada sejak lama dan sudah jamak yang menggunakan. Hanya saja saya berpikir kebanyakan mahasiswa (kuper) di kampus masih banyak yang mengenali pemrograman hanya sebatas CRUD dengan teknik konvensional, sehingga saya sepertinya teknik tersebut bakal terlihat modern &amp; menarik buat mereka. Ada tiga materi utama yang saya sampaikan yaitu: Software Development Framework Web Service (API) dan Plugin Development Ketiga materi tersebut menurut saya sangat penting untuk diketahui semua mahasiswa (dan selain mahasiswa) yang sedang mendalami dunia pemrograman. Meski demikian, seringkali materi tersebut tidak masuk ke dalam kurikulum perkuliahan mata kuliah apapun dengan berbagai macam alasan. Alasan pentingnya (setidaknya pengenalan pada) materi tersebut adalah untuk memudahkan kita (software developer) mengembangkan aplikasi secara lebih cepat dan lebih efisien dengan menggunakan komponen program yang telah dibuat excelently oleh developer lain, sehingga kita bisa lebih berkonsentrasi pada pengembangan modul khusus yang merupakan kekuatan software kita.","text":"Intro …Tahun lalu saya pernah diminta untuk mengisi kuliah umum di Universitas Muria Kudus, saat itu materi yang saya tawarkan (dan diterima oleh panitia) adalah “The Art of Modern Programming“. Sebenernya kalau dipikir juga nggak modern-modern amat sih, materi yang saya sampaikan sudah ada sejak lama dan sudah jamak yang menggunakan. Hanya saja saya berpikir kebanyakan mahasiswa (kuper) di kampus masih banyak yang mengenali pemrograman hanya sebatas CRUD dengan teknik konvensional, sehingga saya sepertinya teknik tersebut bakal terlihat modern &amp; menarik buat mereka. Ada tiga materi utama yang saya sampaikan yaitu: Software Development Framework Web Service (API) dan Plugin Development Ketiga materi tersebut menurut saya sangat penting untuk diketahui semua mahasiswa (dan selain mahasiswa) yang sedang mendalami dunia pemrograman. Meski demikian, seringkali materi tersebut tidak masuk ke dalam kurikulum perkuliahan mata kuliah apapun dengan berbagai macam alasan. Alasan pentingnya (setidaknya pengenalan pada) materi tersebut adalah untuk memudahkan kita (software developer) mengembangkan aplikasi secara lebih cepat dan lebih efisien dengan menggunakan komponen program yang telah dibuat excelently oleh developer lain, sehingga kita bisa lebih berkonsentrasi pada pengembangan modul khusus yang merupakan kekuatan software kita. Ketiga sub materi tersebut akan saya tuliskan secara singkat pada artikel ini dan (InsyaAllah) akan saya kupas lebih dalam pada artikel lain untuk menghindari kebosanan dan tulisan yang terlalu panjang. 1. Software Development FrameworkPenggunaan software development framework sudah dimulai lebih dari 10 tahun yang lalu, skripsi saya tahun 2008 pun sudah bertemakan pengembangan web application framework, dan sudah banyak yang merasakan manfaat dari penggunaan framework. Tapi sampai sekarang masih banyak mahasiswa yang tidak tahu (bahkan tidak pernah mendengar) apa itu framework dan bagaimana cara menggunakannya. Kalau anda pengguna PHP (yang bahasa pemrograman, bukan yang pemberi harapan palsu) ada Code Igniter, Yii, Laravel, Symfony, dll. Kalau anda fans-nya Java ada juga Spring, Struts, JFS, dll. Di bahasa pemrogram Python juga ada Django, Pyramid, Web2Py, dan Flasks. Apalagi di Ruby seharusnya sudah sangat hapal dengan yang namanya Ruby on Rails. Semua yang disebutkan di atas adalah nama-nama Web Application Framework sesuai dengan bahasa pemrogramannya, dan kesemuanya dibuat dengan tujuan (hampir) sama, yaitu memudahkan programmer untuk men-develop program. Ya, kita nggak harus belajar semua framework itu, cukup pilih satu atau dua yang paling cocok di hati untuk digunakan sebagai main arsenal saat mengembangkan aplikasi. Meskipun jalan yang dilalui berbeda-beda, namun secara umum ada 2 fitur utama yang ditawarkan oleh hampir semua framework yaitu pemisahan logic dengan menggunakan design pattern MVC (Model-View-Controller), dan abstraksi manipulasi basis data dengan ORM (object relational mapping) atau sekedar dengan Database Access Layer. Kedua fitur tersebut akan sangat mudah dikuasai jika memang kita sudah memahami Pemrograman Berorientasi Obyek (PBO) dengan baik. Pada artikel ini saya hanya akan sedikit membahas tentang MVC saja, untuk ORM dan fitur-fitur framework yang lain akan dibahas pada artikel terpisah. MVC yang ada pada framework akan memaksa kita memisahkan program ke dalam 3 bagian penting, yaitu Model untuk logika manipulasi data dan interaksi basis data, Controller untuk mengatur alur kerja program, dan View untuk memanipulasi tampilan. Pemisahan ini dapat mengoptimalkan reusability dan extensibilty komponen program seperti yang selama ini didengung-dengungkan saat kita belajar PBO. Sebagai contoh perhatikan gambar ilustrasi aplikasi di bawah ini: Pada ilustrasi aplikasi tersebut kita memiliki 2 class model yaitu Articles dan Question, 2 controller, dan 4 layout. Misalkan kita ingin membuat halaman manajemen artikel yang menampilkan artikel dalam bentuk tabel maka kita tinggal memanggil fungsi getLatestArticle yang mengembalikan list of article (dalam bentuk array misalkan) dan menampilkan list tersebut dengan menggunakan table based layout pada view. Kemudian di bagian aplikasi lain kita ingin menampilkan list article yang sama dalam bentuk list (seperti pada tampilan front-end blog), yang kita lakukan kita tinggal memanggil fungsi model yang sama namun memanfaatkan div based layout yang ada pada view. Jika kita ingin melakukan hal yang sama untuk model Questions, kita tidak perlu menulis ulang semua komponen program tersebut, kita tinggal memanggil fungsi dan layout yang cocok pada controller. Lebih irit koding bukan? Sebagai bonus, beberapa framework seperti Django, Yii, dan Ruby on Rails juga menyediakan auto generated admin atau model scaffolding untuk otomatisasi pembuatan halaman administrasi untuk model yang dibuat. Halaman admin yang biasanya memerlukan waktu berhari-hari untuk pembuatannya, dapat di-generate secara otomatis hanya dalam waktu beberapa menit atau bahkan detik saja. 2. Web Service (API)Semakin banyak bahasa pemrograman, semakin banyak tool pemrograman dan sayangnya kebanyakan tidak kompatibel (tidak bisa berkomunikasi dengan mudah) satu sama lain. Sebagai solusinya, dibuatlah antarmuka universal yang dapat digunakan oleh sebuah aplikasi untuk berinteraksi dengan aplikasi lain, yaitu Web Service. Gambaran dari web service adalah aplikasi menyediakan representasi data dan perintah dalam bentuk antarmuka yang mudah di-parsing oleh semua bahasa pemrograman (biasanya berupa XML atau JSon). Aplikasi yang menyediakan web service menyediakan format XML/JSon yang jika dipanggil oleh program pihak ketiga akan membuat aplikasi tersebut melakukan suatu aksi. Jika aksi yang dijalankan menghasilkan data, maka data tersebut akan kembali dikirimkan pada program pihak ketiga yang memanggil (sekali lagi) dalam bentuk XML/JSon, sehingga data tersebut dapat di manipulasi oleh program pemanggil tersebut. Dengan menggunakan web service, saya yang tidak ada hubungan kekeluargaan apapun dengan Twitter, bisa membuat program yang mengirimkan pesan JSon untuk meminta data siapa saja yang berteman dengan saya dan data tweet yang sudah dibuat oleh teman-teman saya tersebut. Setelah Twitter mengirimkan kembali hasil operasi dalam bentuk JSon, program yang saya buat dapat melakukan mining data untuk mengetahui barang kesukaan semua teman-teman saya. Finally, setelah program yang saya buat mengetahui informasi barang kesukaan teman-teman, program tersebut juga akan mengambil data dari Lazada untuk dipromosikan kepada semua teman saya sesuai preferensinya masing-masing. Tanpa memanfaatkan web service, kita akan kesulitan (bener bener setengah mati) mengumpulkan sekian banyak data dari teman-teman dan sekian banyak data barang dari Lazada, dengan menggunakan web service yang perlu kita pikirkan hanya logika untuk melakukan mining data, that’s all. Fungsi untuk mengambil data tweet dan data barang sudah disedikan oleh aplikasi lain, yang perlu kita lakukan hanya memanggilnya. Saat ini ada ratusan web/aplikasi di internet yang menyediakan service yang sebelumnya harus kita buat sendiri. Sebutkanlah otentikasi pengguna dengan menggunakan Facebook, penyimpanan file dengan menggunakan Dropbox atau Google Drive, tracking lokasi dengan GoogleMap, data Cuaca dengan Yahoo Weather, dan masih banyak lagi. 3. Plugin DevelopmentPada saat melakukan Kerja Praktek (KP), banyak sekali mahasiswa yang diminta untuk membuat WEB profil yang memiliki tambahan bla bla bla bla. Lucunya yang dilakukan mahasiswa pertama kali adalah membuat CMS baru (buatan mereka sendiri) kemudian menambahkan fitur yang diinginkan oleh tempat KP mereka. Hasilnya, karena waktu pelaksanaan KP yang terbatas, dan banyaknya pekerjaan yang harus dilakukan akhirnya tidak ada satu komponen pun yang dibuat dengan baik. Masalahnya adalah, kenapa harus membuat CMS baru dari awal kalau sudah ada banyak CMS yang userfriendly dan sangat bagus seperti Wordpress, Joomla, Drupal, dll? Alasan mereka “Kan di CMS itu belum ada fitur bla bla bla yang diminta penyelia pak”. Pertanyaan berlanjut, kenapa tidak menambahkan fitur tersebut pada CMS yang sudah matang? CMS yang bagus seperti Wordpress, Joomla, Drupal, dll sudah merancang aplikasi mereka sebaik mungkin dengan orientasi pluggable software design. Artinya CMS yang sudah mereka buat dapat ditambahkan komponen baru oleh developer lain secara independen tanpa mengganggu komponen CMS yang lain. Komponen yang dapat ditambahakan bukan hanya komponen-komponen kecil pada widget blog, bahkan fitur sebesar fully managable E-Commerce dan E-Learning pun dapat dimasukkan ke dalam CMS tersebut. Ini yang seringkali tidak diketahui oleh mahasiswa. CMS tersebut tersebut telah mengerjakan 80% dari total pekerjaan seperti autentikasi, halaman admin, manajemen database, validasi input, dan lain sebagainya. Sebagai developer kita tinggal berkonsentrasi pada 20% yang lain, yaitu fitur yang di-_request _oleh customer (penyelia KP dalam kasus tersebut). Waktu 1 hingga 3 bulan untuk menyelesaikan 20% tersebut harusnya jauh lebih dari cukup dibandingkan harus membuat semua dari awal. PenutupDoes that come for free? Tentu saja tidak, semua ada biayanya. Kabar baiknya adalah kita tidak perlu mengeluarkan uang untuk membayar biaya tersebut. Kabar buruknya adalah kita harus membayar biaya tersebut dengan bekerja keras mempelajari hal-hal baru. Di bangku kuliah mungkin yang diajarkan oleh dosen adalah bahasa pemrograman telanjang, tanpa variasi tambahan library atau metode apapun. Sedangkan untuk menggunakan framework kita harus belajar berbagai macam pustaka program yang disediakan masing-masing framework, belum lagi ditambah dengan aturan-aturan framework yang cukup rigid. Begitu juga untuk menggunakan web service, kita harus mempelajari pola request &amp; response yang berikan oleh provider, termasuk juga library untuk pemrograman yang kita gunakan kalau providernya berbaik hati membuatkan library pengakses untuk kita gunakan. Membuat plugin pun tidak jauh berbeda, agar terintegrasi dengan software induk, ada library dan aturan pemrograman baru yang harus diikuti. Ya selamat datang di dunia software development. Saat ini bisa dibilang kalau kita tidak menggunakan komponen program milik orang lain, entah itu berupa library, plugin, atau service ya aplikasi yang kita buat hanya sampe di situ-situ aja. Sebulan penuh habis waktu untuk bikin CRUD tabel master aja, itupun belum dengan validasi inputan dan pengamanan aplikasinya. Sedangkan yang lain untuk bikin CRUD sudah bisa diselesaikan dalam beberapa hari aja. Tanpa menggunakan reusable component yang sudah dibuat programmer lain, saat kita masih berkutat di input output, programmer lain sudah bikin integrasi aplikasi dengan sensor penangkap gelombang otak. Selamat belajar hal-hal baru, dan tetap semangat mengarungi dunia pemrograman …","categories":[{"name":"Catatan","slug":"Catatan","permalink":"http://fahrifirdaus.web.id/categories/Catatan/"}],"tags":[{"name":"pemrograman","slug":"pemrograman","permalink":"http://fahrifirdaus.web.id/tags/pemrograman/"},{"name":"framework","slug":"framework","permalink":"http://fahrifirdaus.web.id/tags/framework/"},{"name":"plugin","slug":"plugin","permalink":"http://fahrifirdaus.web.id/tags/plugin/"},{"name":"web service","slug":"web-service","permalink":"http://fahrifirdaus.web.id/tags/web-service/"}]},{"title":"Doesn’t Work Right ...","slug":"doesnt-work-right","date":"2014-10-17T06:26:34.000Z","updated":"2016-12-22T16:46:48.000Z","comments":true,"path":"2014/10/doesnt-work-right/","link":"","permalink":"http://fahrifirdaus.web.id/2014/10/doesnt-work-right/","excerpt":"","text":"Don’t worry if it doesn’t work right. If everything did, you’d be out of a job.Mosher’s Law of Software Engineering","categories":[{"name":"Inilah Hidup","slug":"Inilah-Hidup","permalink":"http://fahrifirdaus.web.id/categories/Inilah-Hidup/"},{"name":"Kata-Kata Bijak","slug":"Inilah-Hidup/Kata-Kata-Bijak","permalink":"http://fahrifirdaus.web.id/categories/Inilah-Hidup/Kata-Kata-Bijak/"}],"tags":[]},{"title":"Computer science education ...","slug":"computer-science-education-cannot-make-anybody-an-expert-programmer","date":"2014-10-17T06:24:18.000Z","updated":"2016-12-22T16:46:48.000Z","comments":true,"path":"2014/10/computer-science-education-cannot-make-anybody-an-expert-programmer/","link":"","permalink":"http://fahrifirdaus.web.id/2014/10/computer-science-education-cannot-make-anybody-an-expert-programmer/","excerpt":"","text":"Computer science education cannot make anybody an expert programmer any more than studying brushes and pigment can make somebody an expert painter.Eric S. Raymond","categories":[{"name":"Inilah Hidup","slug":"Inilah-Hidup","permalink":"http://fahrifirdaus.web.id/categories/Inilah-Hidup/"},{"name":"Kata-Kata Bijak","slug":"Inilah-Hidup/Kata-Kata-Bijak","permalink":"http://fahrifirdaus.web.id/categories/Inilah-Hidup/Kata-Kata-Bijak/"}],"tags":[]},{"title":"Variabel & Tipe Data Pada Javascript","slug":"belajar-pemrograman-dengan-javascript-variabel-tipe-data","date":"2014-07-14T05:29:47.000Z","updated":"2016-12-25T00:00:46.000Z","comments":true,"path":"2014/07/belajar-pemrograman-dengan-javascript-variabel-tipe-data/","link":"","permalink":"http://fahrifirdaus.web.id/2014/07/belajar-pemrograman-dengan-javascript-variabel-tipe-data/","excerpt":"Pada artikel sebelumnya kita telah membahas bagaimana memulai pemrograman dengan menggunakan Javascript, tapi kita masih belum melakukan permainan logika apapun, hanya menampilkan teks saja. Pada artikel ini, kita akan membahas dan menguji coba lebih jauh konsep dasar pemrograman yaitu variabel dan tipe data. Variabel dan KonstantaVariabel adalah tempat penampungan data yang akan digunakan dalam program. Disebut variabel karena data yang tersimpan di dalamnya dapat berubah-ubah sesuai kebutuhan, sedangkan penampung data yang tidak dapat berubah setelah diberikan nilai awal disebut Konstanta.","text":"Pada artikel sebelumnya kita telah membahas bagaimana memulai pemrograman dengan menggunakan Javascript, tapi kita masih belum melakukan permainan logika apapun, hanya menampilkan teks saja. Pada artikel ini, kita akan membahas dan menguji coba lebih jauh konsep dasar pemrograman yaitu variabel dan tipe data. Variabel dan KonstantaVariabel adalah tempat penampungan data yang akan digunakan dalam program. Disebut variabel karena data yang tersimpan di dalamnya dapat berubah-ubah sesuai kebutuhan, sedangkan penampung data yang tidak dapat berubah setelah diberikan nilai awal disebut Konstanta. Sebagai contoh mari kita buat sebuah file dengan nama var.html dan tuliskan kode pemrograman di bawah ini: 123456789101112&lt;html&gt;&lt;head&gt; &lt;title&gt;Belajar Variabel &amp;amp; Konstanta&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script type=\"text/javascript\"&gt; document.write(\"Seorang mahasiswa bernama Fahri Firdausillah.&lt;br&gt;\"); document.write(\"Fahri Firdausillah belajar di Universitas Dian Nuswantoro.&lt;br&gt;\"); document.write(\"Fahri Firdausillah memprogram dengan menggunakan Javascript\"); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Tidak ada masalah teknis dengan kode program tersebut. Saat file tersebut dijalankan, browser akan menapilkan teks yang diberikan dengan baik. Hanya saja penulisannya kurang efektif, karena ada teks yang ditulis secara berulang 3 kali, yaitu nama “Fahri Firdausillah”. Untuk membuatnya lebih efektif, kita dapat menyimpan menyimpan teks tersebut ke dalam sebuah variabel nama dan memanggilnya berulang-ulang tanpa harus menulis ulang. Lebih jelasnya ubah kode yang ada pada file var.html menjadi seperti di bawah ini: 12345678...&lt;script type=\"text/javascript\"&gt; var nama = \"Fahri Firdausillah\"; document.write(\"Seorang mahasiswa bernama \"+nama+\".&lt;br&gt;\"); document.write(nama+\" belajar di Universitas Dian Nuswantoro.&lt;br&gt;\"); document.write(nama+\" memprogram dengan menggunakan Javascript\");&lt;/script&gt;... Perhatikan, pada kode program yang telah diperbaharui kita menambahkan variabel nama dan memberikannya data (atau lebih sering disebut nilai/value) sebuah teks “Fahri Firdausillah”. Selanjutnya saya dapat memanggil variabel tersebut berulang-ulang dan mendapatkan hasil yang sama persis dengan kode program sebelumnya. Tanda / operator “+” pada teks tersebut disebut operator konkatenasi, digunakan untuk menggabungkan dua teks atau lebih. Penjelasan lebih lanjut akan diberikan pada bagian tipe data dan Operator di bawah. Ada tiga langkah pembuatan dan penggunaan variabel dalam pemrograman, yaitu: Deklarasi: mendefinisikan nama variabel menggunakan perintah var nama_variabe. Assignment: pengisian nilai/data ke dalam variabel menggunakan operator =. Using: penggunaan variabel dengan memanggil secara langsung. Meski demikian, ketiga langkah tersebut tidak harus dijalankan satu-persatu tiap baris. Seringkali, langkah pertama dan kedua dijalankan sekaligus seperti pada contoh yang telah diberikan. Variabel bukan hanya berfungsi untuk menyimpan teks saja, bahkan variabel akan lebih terlihat fungsinya saat digunakan untuk menyimpan data sementara yang akan digunakan untuk proses selanjutnya. Oke, untuk contoh kali ini, kita coba dulu dalam developer console. Bukalah developer console, kemudian ketikkan perintah berikut berturut turut: var nilai1 = 20;↵ var nilai2 = 50;↵ var jumlah = nilai1 + nilai2;↵ alert(&quot;Jumlahnya adalah :&quot;+jumlah);↵ Cukup puas dengan hasilnya? Sekarang setelah berhasil mencobanya dengan menggunakan developer console, saatnya menuliskannya dalam var.html yang sudah kita buat sebelumnya: 12345678910111213&lt;script type=\"text/javascript\"&gt; var nama = \"Fahri Firdausillah\"; document.write(\"Seorang mahasiswa bernama \"+nama+\".&lt;br&gt;\"); document.write(nama+\" belajar di Universitas Dian Nuswantoro.&lt;br&gt;\"); document.write(nama+\" memprogram dengan menggunakan Javascript\");&lt;/script&gt;&lt;hr&gt;&lt;script type=\"text/javascript\"&gt; var nilai1 = 20; var nilai2 = 50; var jumlah = nilai1 + nilai2; document.write(\"Hasil Penjumlahan \"+nilai1+\" + \"+nilai2+\" adalah \"+jumlah);&lt;/script&gt; Kode yang di-highlight di atas adalah kode baru yang ditambahkan dan sudah diuji coba pada developer console. Silahkan coba mengubah-ubah angka yang diinputkan pada variabel nilai1 dan nilai2, kemudian amati hasilnya. Kode tersebut menunjukkan kegunaan sebenarnya dari variabel, yaitu menampung data sementara dan menggunakannya untuk proses selanjutnya (dalam kasus tersebut untuk operasi penambahan dan menampilkan). Pada program yang lebih besar, variabel yang digunakan juga akan lebih besar dan lebih beragam tentunya. Baiklah kalau tidak ada pertanyaan, kita lanjutkan ke bagian selanjutnya yaitu tipe data. Tipe DataPada contoh program sebelumnya, kita lihat ada satu operator yang sama yaitu operator + namun efek yang ditimbulkan berbeda. Pada teks operator tersebut berfungsi untuk menggabungkan dua teks atau lebih, sedangkan pada angka operator tersebut berfungsi untuk menambahkan nilai dari dua pasang angka. “Teks” dan “angka” dalam pemrograman disebut sebagai tipe data. Dalam bahasa pemrograman yang lebih strict seperti C atau Java, ada banyak tipe data dasar pemrograman, antara lain string, integer, float, double, character, dan lain sebagainya. Dalam javascript untuk tipe data dasar kita cukup mengetahui dua jenis tipe data, yaitu string/teks dan number/angka. Tipe data angka/number adalah semua semua data yang dapat dilakukan operasi aritmatik, sedangkan tipe data teks adalah untaian (string) karakter yang tersusun. Untuk menuliskan data dengan tipe data angka, kita tinggal menuliskan saja angka (dengan tambahan karakter “.” untuk angka desimal), sedangkan untuk menuliskan data String kita harus mengapit karakter apapun dengan tanda petik. Perbedaan tipe data mempengaruhi perbedaan hasil saat diberikan operator tertentu, malah seringkali perintah hanya dapat dijalankan pada satu tipe data dan tidak dapat dijalankan pada tipe data lain, contoh perintah perkalian atau pembagian. Kira-kira apa yang terjadi bila kita memaksakan operator pembagian untuk tipe data teks/string? Untuk menjawab pertanyaan tersebut, kita tidak perlu repot-repot membuat halaman HTML baru yang berisi javascript, tapi cukup menggunakan developer console saja. Baiklah, langsung saja buka developer console dan jalankan instruksi berikut &quot;aku&quot; * &quot;cinta&quot; / &quot;kamu&quot; ↵. Jelas terlihat, hasilnya adalah NaN yang merupakan singkatan dari _Not a Number_.","categories":[{"name":"Akademis","slug":"Akademis","permalink":"http://fahrifirdaus.web.id/categories/Akademis/"},{"name":"Algoritma","slug":"Akademis/Algoritma","permalink":"http://fahrifirdaus.web.id/categories/Akademis/Algoritma/"},{"name":"Pemrograman Dasar","slug":"Akademis/Algoritma/Pemrograman-Dasar","permalink":"http://fahrifirdaus.web.id/categories/Akademis/Algoritma/Pemrograman-Dasar/"}],"tags":[]},{"title":"Pengenalan Pemrograman dengan Javascript","slug":"belajar-pemrograman-dengan-javascript-intro","date":"2014-07-13T16:00:52.000Z","updated":"2016-12-24T23:55:14.000Z","comments":true,"path":"2014/07/belajar-pemrograman-dengan-javascript-intro/","link":"","permalink":"http://fahrifirdaus.web.id/2014/07/belajar-pemrograman-dengan-javascript-intro/","excerpt":"Pemrograman ada proses memberikan perintah kepada komputer untuk melakukan sesuatu, seperti menampilkan gambar, mencetak laporan, melakukan perhitungan, dan lain sebagainya. Secara teknis memang komputer hanya memahami perintah berupa angka-angka abstrak yang susah dipahami oleh manusia, sehingga untuk membantu manusia berkomunikasi dengan komputer dibuatlah bahasa pemrograman yang mendekati natural bahasa manusia (bahasa inggris). Ada banyak bahasa pemrograman di dunia ini, sedangkan yang akan digunakan untuk belajar pemrograman dalam seri tutorial yang saya buat ini adalah bahasa pemrograman berbasis browser “Javascript”. Semoga seri berikutnya bisa saya posting secara teratur tanpa hambatan.","text":"Pemrograman ada proses memberikan perintah kepada komputer untuk melakukan sesuatu, seperti menampilkan gambar, mencetak laporan, melakukan perhitungan, dan lain sebagainya. Secara teknis memang komputer hanya memahami perintah berupa angka-angka abstrak yang susah dipahami oleh manusia, sehingga untuk membantu manusia berkomunikasi dengan komputer dibuatlah bahasa pemrograman yang mendekati natural bahasa manusia (bahasa inggris). Ada banyak bahasa pemrograman di dunia ini, sedangkan yang akan digunakan untuk belajar pemrograman dalam seri tutorial yang saya buat ini adalah bahasa pemrograman berbasis browser “Javascript”. Semoga seri berikutnya bisa saya posting secara teratur tanpa hambatan. Sebelum membahas lebih jauh, saya akan langsung saja menjawab pertanyaan yang mungkin banyak muncul di benak pembaca yang sedikit banyak pernah belajar pemrograman. Kenapa menggunakan Javascript? Kenapa tidak menggunakan C, Java, atau Pascal seperti yang banyak diajarkan di universitas? Oke sebelum menjawab pertanyaan tersebut, terlebih dahulu kita harus sepakat bahwa Javascript adalah bahasa pemrograman yang tidak kalah ampuhnya dibandingkan bahasa pemrograman lain. Meskipun memang program yang dibuat menggunakan Javascript kebanyakan hanya dijalankan pada browser, tidak dijalankan langsung melalui executable file seperti program yang dibuat dengan bahasa pemrograman lain. Kalau sudah sepakat, baru saya akan menjelaskan beberapa alasan kenapa menggunakan Javascript untuk belajar pemrograman, kalau masih belum “ayo gelut sek sedelok”. Ehm ehm, oke jadi alasannya adalah sebagai berikut: Murah, untuk membuat program menggunakan javascript kita tidak perlu menginstall aplikasi tambahan apapun, cukup mengguanakan teks editor sederhana dan sebuah browser kita sudah dapat membuat dan mengeksekusi program yang kita buat. Derivative C, gaya syntax Javascript banyak mengambil gaya pemrograman bahasa C. Bagi anda yang belum tahu, bahasa C adalah bahasa pemrograman yang model syntaxnya sangat banyak ditiru oleh bahasa pemrograman lain. Java, C++, C#, PHP, Python adalah bahasa pemrograman yang paling banyak digunakan, dan itu semua merupakan turunan dari C. Diharapkan jika kita sudah menguasai salah satu dialek syntax bahasa pemrograman bahasa C untuk berpindah ke bahasa pemrograman lain yang merupakan turunan C juga akan lebih mudah. Mudah, dibandingkan dengan bahasa C, Javascript relatif jauh lebih mudah terutama dalam hal pengelolaan variabel bertipe data String dan pengelolaan memori. Selain itu, tidak seperti Java yang harus dealing with Class dan Object sejak pertama kali menulis program, Javascript dapat digunakan secara prosedural dan Object Oriented. Oke saya tidak akan membandingkan dengan Python &amp; PHP, karena semuanya bisa dibilang hampir sama mudahnya. Sedang trend, saat ini bahasa Javascript tidak hanya digunakan untuk browser saja, banyak aplikasi pemrograman yang menggunakan Javascript. Untuk membuat aplikasi mobile kita bisa menggunakan Phonegap &amp; Appcelerator yang berbasis Javascript, untuk aplikasi server side ada Node.js yang cukup terkenal. Oke, untuk aplikasi desktop memang belum ada tools yang menggunakan Javascript murni (ada TideSDK tapi masih BETA). Tapi saya yakin, in not so far future bakal ada pemrograman desktop yang menggunakan Javascript. Harvard &amp; Stanford, Stanford’s Computer Science 101 menggunakan Javascript untuk bahasa utamanya. Harvard’s Introduction to Computer Science juga menggunakan Javascript sebagai bahasa pemrograman utama. Oke sepertinya sudah cukup banyak alasan kenapa menggunakan Javascript sebagai bahasa pertama untuk belajar pemrograman. Selanjutnya mari kita mulai saja membuat aplikasi pertama kita dengan Javascript. Many Faces of HelloWorldSemenjak Denis Ritchie menerbitkan bukunya tentang pemrograman bahasa C, komunitas programmer sering menggunakan program HelloWorld sebagai program pertama yang dibuat saat belajar bahasa pemrograman baru. HelloWorld adalah program yang sungguh amat sangat sederhana sekali, untuk menampilkan sebuah kalimat “selamat datang” ke dalam dunia pemrograman. Dengan menggunakan Javascript, ada beberapa cara untuk membuat program HelloWorld (yang semuanya tentunya memerlukan browser sebagai tempat eksekusi). 1) Menampilkannya ke dalam halaman web, 2) Menampilkan dengan sebuah kotak dialog, 3) Menggunakan Developer Console yang ada pada browser. Menampilkan pada Halaman WebJavascript adalah pemrograman yang datang sepaket dengan HTML dan CSS untuk membentuk web. Maka tidak heran jika penulisan javascript selayaknya diinputkan secara langsung ke dalam kode HTML dan ditampilkan pada halaman web. Langsung saja, buatlah file hello.html menggunakan editor yang terinstall di komputer anda (disarankan menggunakan SublimeText atau Notepad++), dan tuliskan kode berikut: 12345678910&lt;html&gt;&lt;head&gt; &lt;title&gt;Latihan Javascript&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script type=\"text/javascript\"&gt; document.write(\"Selamat datang di dunia Pemrograman\"); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Simpan dan double klik file yang telah anda buat untuk menampilkan ke dalam browser. Voila, anda resmi sudah berhasil menjadi programmer Javascript. Katanya mudah, kok nampilin satu baris aja kodingnya panjang banget? Sebenarnya, dalam koding tersebut terdapat konstruksi HTML lengkap. Bagian yang murni untuk menampilkan javascript hanya sebagian saja. Oke, kalau anda pengen yang lebih pendek, edit koding pada file hello.html tersebut sehingga menjadi seperti ini: 123&lt;script type=\"text/javascript\"&gt; document.write(\"Selamat datang di dunia Pemrograman\");&lt;/script&gt; Simpan dan sekali lagi jalankan pada browser. Hasilnya sama persis dan tulisannya jauh lebih pendek bukan? Meski demikian cara tersebut tidak disarankan, karena akan menghilangkan elemen HTML yang lain dan di dunia nyata kita tidak akan membuat program Javascript dengan cara seperti itu. Selanjutnya saya akan tetap mengajarkan dengan menggunakan cara yang pertama. Mari kita lanjutkan ke pembuatan program HelloWorld dengan cara yang kedua. Menampilkan dengan Kotak DialogKalau anda tidak suka hanya menampilkan dalam bentuk tulisan pada halaman browser, anda bisa juga menampilkannya dalam bentuk kotak dialog. Dengan javascript caranya sangat mudah sekali, buatlah satu file baru dengan nama hello_dialog.html dan tuliskan kode berikut: 12345678910&lt;html&gt;&lt;head&gt; &lt;title&gt;Latihan Javascript&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script type=\"text/javascript\"&gt; alert(\"Selamat datang di dunia Pemrograman\"); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Simpan, kemudian jalankan pada browser. Jika kode yang anda tuliskan betul, maka anda akan mendapatkan sebuah kotak dialog yang bertuliskan “Selamat datang di dunia Pemrograman” (tanpa tanda petik tentunya) dan kotak tersebut akan hilang saat kita mengklik tombol OK. Sebenarnya bisa dibilang tidak mungkin kita akan membuat program Javascript yang berisi banyak sekali kotak dialog yang bermunculan untuk melaksanakan aksinya (kecuali kalau memang ingin ngerjain penggunannya). Tapi, karena pengamatan saya banyak sekali orang yang tertarik dengan menampilkan kotak dialog saat belajar Javascript, jadi saya ajarkan caranya di sini. Kalau sudah puas menampilkan banyak kotak dialog, mari kita lanjutkan ke cara yang terakhir. Developer ConsoleTidak banyak programmer pemula yang tahu bahwa di semua browser modern terdapat satu tools yang cukup powerfull untuk menguji coba kode Javascript tanpa harus mengubah kode asli pada file. Memang kita tidak akan membuat program dengan menggunakan Developer Console ini, karena sifatnya sementara (begitu browser ditutup, data akan hilang). Namun tools ini sangat berguna sekali untuk mengedit program dan langsung mengetahui hasilnya tanpa harus bolak-balik buka editor dan browser. Cara untuk menampilkan developer tools adalah : jika anda menggunakan Google Chrome tekan Ctrl + Shift + J jika anda menggunakan Mozilla Firefox tekan Ctrl + Shift + K jika anda menggunakan Internet Explorer download dulu Chrome atau Firefox, eh (maaf bercanda) maksud saya tekan F12 dan klik tab “Console” Untuk menguji coba cara ini, kita tidak perlu membuat file baru. Cukup buka file hello.html yang sudah kita buat kemudian ketikkan perintah berikut pada developer Console: 1document.write(\"ini juga HelloWorld lhooo.....\"); Tekan enter untuk menjalankan, dan lihat tulisan pada halaman anda sudah berubah seperti yang kita tuliskan pada developer console. Boleh juga anda mencoba menampilkan HelloWorld dalam bentuk kotak dialog dengan menuliskan perintah berikut dan tekan tombol enter: 1alert(\"ini juga HelloWorld lagi dan lagi\") Membenahi KesalahanKemungkinan seorang pemula menuliskan kode program sederhana dengan betul tanpa mengalami error (kesalahan penulisan) adalah 10%. Sedangkan kemungkinan programmer professional menuliskan kode pemrograman yang kompleks tanpa pernah mengalami kesalahan penulisan adalah 0,001%. Mendapatkan error saat membuat program adalah sesuatu yang sangat biasa, jangan khawatir, temen anda yang salah banyak juga kok. Yang terpenting bukanlah menuliskan kode tanpa kesalahan, tapi mengidentifikasi dan segera mencari solusi dari permasalahan yang didapat. Bagi yang pernah belajar bahasa C, Pascal, Java, VB, dan lain sebagainya, mungkin berpikir kalau kita salah tulis kode dengan menggunakan bahasa pemrograman tersebut kita akan diberi peringatan saat melakukan kompilasi. Namun, karena Javascript bukanlah bahasa pemrograman yang perlu dikompilasi pengecekan syntax pada saat kompilasi tidak akan terjadi. Untunglah pada browser modern ada developer tools yang dapat digunakan untuk mengecek kesalahan penulisan pada program Javascript. Marilah kita mencoba membenahi kesalahan pada kode berikut: 12345678910&lt;html&gt;&lt;head&gt; &lt;title&gt;Latihan Javascript&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script type=\"text/javascript\"&gt; docment.write(\"Selamat datang di dunia Pemrograman\"); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Perhatikan, pada kode tersebut bagian javascript seharusnya tertulis document.write(&quot; ... &quot;); tetapi tertulis docment.write(&quot; ... &quot;); tidak ada huruf “u” pada kata “docment”. Jika dijalankan pada browser tidak akan ada kalimat yang ditampilkan, karena salah penulisan. Sekarang buka developer console menggunakan salah satu cara yang dijelaskan sebelumnya (tergantung browser yang dipakai), dan terlihat ada peringatan kesalahan “Uncaught ReferenceError: docment is not defined“. Pesan kesalahan tersebut mengatakan bahwa perintah “docment” tidak terdefinisi, tidak dapat dipahami. Dengan demikian kita mengetahui di mana letak kesalahan dan apa yang harus dibenahi. PenutupPada artikel ini penulis memberikan gambaran awal tentang membuat program dengan menggunakan Javascript. Selain itu dalam artikel ini juga dikenalkan sebuah tools developer console yang cukup efektif dan powerful untuk menguji coba kode pemrograman yang dibuat, termasuk menemukan kesalahan dalam penulisan kode pemrograman Javascript. Pada seri artikel selanjutnya akan dijelaskan beberapa aspek penting pemrograman yang patut dipertimbangkan saat membuat program. Selamat mencoba, dan semoga berhasil.","categories":[{"name":"Akademis","slug":"Akademis","permalink":"http://fahrifirdaus.web.id/categories/Akademis/"},{"name":"Pemrograman Dasar","slug":"Akademis/Pemrograman-Dasar","permalink":"http://fahrifirdaus.web.id/categories/Akademis/Pemrograman-Dasar/"}],"tags":[{"name":"dasar pemrograman","slug":"dasar-pemrograman","permalink":"http://fahrifirdaus.web.id/tags/dasar-pemrograman/"},{"name":"javascript","slug":"javascript","permalink":"http://fahrifirdaus.web.id/tags/javascript/"},{"name":"pemrograman","slug":"pemrograman","permalink":"http://fahrifirdaus.web.id/tags/pemrograman/"}]},{"title":"Console Input Menggunakan Scanner (Java)","slug":"console-input-menggunakan-scanner-java","date":"2014-04-07T03:45:13.000Z","updated":"2016-12-23T17:25:56.000Z","comments":true,"path":"2014/04/console-input-menggunakan-scanner-java/","link":"","permalink":"http://fahrifirdaus.web.id/2014/04/console-input-menggunakan-scanner-java/","excerpt":"Console input adalah cara program mendapatkan input langsung dari pengguna dengan menggunakan Command Prompt (istilah windows) atau Console (istilah Linux). Meskipun di pasaran bisa dibilang kita tidak pernah lagi ketemu dengan program yang melakukan input dengan menggunakan console (command prompt), namun untuk tujuan belajar dan testing aplikasi input melalui console masih banyak digunakan. Semenjak versi 1.5, java memberikan cara input console yang lebih mudah (dibandingkan versi sebelumnya), yaitu dengan menggunakan class Scanner yang ada pada java.util.*;. Untuk dapat menggunakan class tersebut ada dua tahap yang perlu dilakukan, yaitu instantiasi object Scanner dan pemanggilan method input yang sesuai.","text":"Console input adalah cara program mendapatkan input langsung dari pengguna dengan menggunakan Command Prompt (istilah windows) atau Console (istilah Linux). Meskipun di pasaran bisa dibilang kita tidak pernah lagi ketemu dengan program yang melakukan input dengan menggunakan console (command prompt), namun untuk tujuan belajar dan testing aplikasi input melalui console masih banyak digunakan. Semenjak versi 1.5, java memberikan cara input console yang lebih mudah (dibandingkan versi sebelumnya), yaitu dengan menggunakan class Scanner yang ada pada java.util.*;. Untuk dapat menggunakan class tersebut ada dua tahap yang perlu dilakukan, yaitu instantiasi object Scanner dan pemanggilan method input yang sesuai. Cara penggunaanya seperti ditunjukkan pada koding di bawah ini: 12345678import java.util.Scanner;// ... ... ...Scanner input = new Scanner(System.in);input.nextLine();input.next();input.nextInt();input.nextDouble();// ... ... ... Penjelasan program: import …: untuk mengimport library Scanner dari java.util. Scanner input: deklarasi class Scanner ke dalam variabel input (tentu saja nama variabel boleh diubah yang lain). new Scanner(System.in): instantiasi object Scanner dengan parameter System.in. input.next …: memerintahkan program untuk menerima input dari console dan mengonversinya ke dalam tipe data yang sesuai. Jika yang diinginkan adalah String maka bisa menggunakan method nextLine(), jika ingin input integer dapat menggunakan nextInt(), jika ingin input data desimal dapat menggunakan nextDouble() dan seterusnya.Oke, saatnya melihat aksi class Scanner dalam program input sederhana: 1234567891011121314151617public class DemoInput&#123; public static void main(String [] args)&#123; Scanner input = new Scanner(System.in); System.out.print(\"Inputkan Nama : \"); String nama = input.nextLine(); System.out.print(\"Inputkan Nilai 1 : \"); int nilai1 = input.nextInt(); System.out.print(\"Inputkan Nilai 2 : \"); int nilai2 = input.nextInt(); System.out.print(\"Penambahan dari nilai 1 dan nilai 2 : \"+(nilai1+nilai2)); System.out.println(\"Nama anda adalah: \"+nama); &#125;&#125; Untuk mencobanya, tentu saja kita harus compile dan jalankan aplikasi tersebut. Demikian tutorial singkat input console dengan menggunakan class Scanner pada Java. Semoga bermanfaat.","categories":[{"name":"Akademis","slug":"Akademis","permalink":"http://fahrifirdaus.web.id/categories/Akademis/"},{"name":"Pemrograman Berorientasi Obyek","slug":"Akademis/Pemrograman-Berorientasi-Obyek","permalink":"http://fahrifirdaus.web.id/categories/Akademis/Pemrograman-Berorientasi-Obyek/"}],"tags":[{"name":"java","slug":"java","permalink":"http://fahrifirdaus.web.id/tags/java/"},{"name":"input console","slug":"input-console","permalink":"http://fahrifirdaus.web.id/tags/input-console/"},{"name":"Scanner","slug":"Scanner","permalink":"http://fahrifirdaus.web.id/tags/Scanner/"}]},{"title":"MySQL Tutorial 1st Meeting","slug":"mysql-tutorial-1st-meeting","date":"2013-12-12T10:36:36.000Z","updated":"2016-12-22T16:46:48.000Z","comments":true,"path":"2013/12/mysql-tutorial-1st-meeting/","link":"","permalink":"http://fahrifirdaus.web.id/2013/12/mysql-tutorial-1st-meeting/","excerpt":"","text":"MySQL merupakan Database Management System (DBMS) gratisan yang paling banyak digunakan. Cara instalasi dan penggunaanya yang relatif mudah, akses yang cepat, dan bundled dengan Apache dan PHP (AMP) membuat basis data ini sangat populer untuk orang yang sedang belajar basis data maupun pemrograman basis data (terutama dengan php). Postingan ini merupkan postingan berseri slide tutorial MySQL yang digunakan pada pelatihan MySQL HMTI UDINUS. Semoga dapat bermanfaat. MySQL 1, introduction from Fahri Firdausillah","categories":[{"name":"Basis Data","slug":"Basis-Data","permalink":"http://fahrifirdaus.web.id/categories/Basis-Data/"}],"tags":[{"name":"basis data","slug":"basis-data","permalink":"http://fahrifirdaus.web.id/tags/basis-data/"},{"name":"crud","slug":"crud","permalink":"http://fahrifirdaus.web.id/tags/crud/"},{"name":"mysql","slug":"mysql","permalink":"http://fahrifirdaus.web.id/tags/mysql/"}]},{"title":"Kunci Belajar: Makan Enak, Tidur Enak","slug":"kunci-belajar-makan-enak-tidur-enak","date":"2012-12-07T08:15:49.000Z","updated":"2016-12-23T17:30:24.000Z","comments":true,"path":"2012/12/kunci-belajar-makan-enak-tidur-enak/","link":"","permalink":"http://fahrifirdaus.web.id/2012/12/kunci-belajar-makan-enak-tidur-enak/","excerpt":"Seorang santri yang telah lama mondok bertanya kepada Kyainya, dia merasa heran setelah begitu lama dia mondok, tapi kenapa ilmu yang dikuasainya sangat minim sekali, terkadang bahkan ia mulai putus asa, mungkin saja dia memang bukan ahlinya, katanya dalam hati, tapi setiap dia mengingat cerita Imam Ibnu Hajar Al-Haitami seorang ulama besar bidang ilmu Fiqh yang dulu pada waktu mondok juga mengalami penderitaan yang sama (telah lama mondok tapi belum juga pintar), diapun berbesar hati. Namun kebesaran hatinya lama juga tak bersambut, kian hari ilmu-nya tidak juga bertambah hanya mandeg sampai situ saja. Akhirnya dia memutuskan untuk bertanya langsung pada kyainya, mungkin belajar dengan cara yang salah, atau mungkin malah sang Kyai dapat memberikan wejangan atau tirakat yang sesuai untuknya agar bisa Alim.","text":"Seorang santri yang telah lama mondok bertanya kepada Kyainya, dia merasa heran setelah begitu lama dia mondok, tapi kenapa ilmu yang dikuasainya sangat minim sekali, terkadang bahkan ia mulai putus asa, mungkin saja dia memang bukan ahlinya, katanya dalam hati, tapi setiap dia mengingat cerita Imam Ibnu Hajar Al-Haitami seorang ulama besar bidang ilmu Fiqh yang dulu pada waktu mondok juga mengalami penderitaan yang sama (telah lama mondok tapi belum juga pintar), diapun berbesar hati. Namun kebesaran hatinya lama juga tak bersambut, kian hari ilmu-nya tidak juga bertambah hanya mandeg sampai situ saja. Akhirnya dia memutuskan untuk bertanya langsung pada kyainya, mungkin belajar dengan cara yang salah, atau mungkin malah sang Kyai dapat memberikan wejangan atau tirakat yang sesuai untuknya agar bisa Alim. “Kyai, saya sudah hampir sepuluh tahun mondok di-pesantren, tapi mengapa saya belum juga bisa menguasai ilmu yang anda ajarkan? Sebenarnya bagaimanakah cara belajar yang cocok itu?” tanya sang santri. “Wahai santriku, sebenarnya kunci cara dari segala ilmu itu sangat sederhana, yaitu METE, makan enak tidur enak. Kalau kamu bisa mengamalkannya saya yakin semua ilmu dapat kamu kuasai”.Dengan senang hati sang santri kembali ke gotakan (kamar), sambil merenungkan nasehat gurunya dia merasa sangat senang sekali, ternyata begitu mudahnya untuk menjadi pintar, dan memang dia merasa selama ini belum pernah mengamalkan apa yang baru saja dinasehatkan kepadanya. Dia mengingat selama ini dia hanya makan dengan lauk tempe dan sambal terong, terkadang kalau ada uang lebih tambah telur, sungguh sangat tidak enak. Tidurpun begitu selama ini dia hanya berselimut lantai dan seringkali berdesakan dengan teman satu gotakannya, mana mungkin bisa tidur enak. Keesokan harinya sang santri bertekad untuk merubah gaya hidupnya tentu saja seperti yang difatwakan Kyainya, Makan enak-Tidur enak. Berangkatlah sang santri untuk membeli makanan yang enak-enak termasuk menu makan sehari-harinya pun dirubah, sekarang semakin rajin makan daging dan berbagai macam makanan lezat lain. Cara tidur pun dirubah, agar bisa tidur enak dia membeli kasur mini lengkap dengan bantal guling dan selimut, ditambah lagi jadwal tidurnya diubah lebih sore sehingga dia bisa tidur dengan enak tanpa diganggu teman-teman sekamarnya. Berselang cukup lama, uang saku sang santri semakin menipis dengan cepat akibat gaya hidup yang berubah cukup drastis. Namun semakin berkurangnya uang saku tidak juga dibarengi dengan ilmu yang diharapkannya. Dia masih saja tetap sang santri yang bodoh dan tidak bisa apa-apa, padahal banyak biaya telah dikeluarkan. Dengan perasaan sedikit mendongkol, akhirnya sang santri bertanya kembali kepada Kyainya, kenapa hal ini terjadi apakah saran yang pernah difatwakan sang Kyai memang keliru, atau kalau tidak mengapa demikian yang dia alami. “Yai, saya sudah menjalankan apa yang anda perintahkan, tapi kenapa saya tidak kunjung pintar, malah sepertinya semakin bodoh?” kemudian Santri menjelaskan gaya hidupnya yang berubah drastis. Sang kyai terseyum lalu menjawab “Kamu salah menafsirkan nasehatku, salah sangat salah sekali. Yang kumaksud makan enak adalah jangan makan sampai engkau benar-benar lapar, saat engkau merasa lapar maka makanan apapun akan terasa enak, lebih baik lagi kalau kau membiasakan berpuasa karena itu akan mengurangi syahwat dan juga efek buruk terlalu kenyang makanan. Sedangkan yang kumaksud dengan tidur enak adalah jangan tidur sebelum engkau benar-benar mengantuk, gunakanlah waktumu untuk muthola’ah kitab (membaca dan menelaaah kitab) sebanyak mungkin, lebih baik lagi kalau engkau bisa membiasakan Qiyamul-Lail, curilah waktu untuk belajar dan beribadah sewaktu teman-temanmu tertidur lelap. Kalau engkau benar mengamalkannya, saya yakin ilmu apa saja dapat engkau kuasai.” (dicolong dari arsip blog lama)","categories":[{"name":"Inilah Hidup","slug":"Inilah-Hidup","permalink":"http://fahrifirdaus.web.id/categories/Inilah-Hidup/"},{"name":"Inspirasi","slug":"Inilah-Hidup/Inspirasi","permalink":"http://fahrifirdaus.web.id/categories/Inilah-Hidup/Inspirasi/"}],"tags":[{"name":"belajar","slug":"belajar","permalink":"http://fahrifirdaus.web.id/tags/belajar/"},{"name":"makan","slug":"makan","permalink":"http://fahrifirdaus.web.id/tags/makan/"},{"name":"tidur","slug":"tidur","permalink":"http://fahrifirdaus.web.id/tags/tidur/"}]},{"title":"Hello World","slug":"hello-world","date":"2012-12-01T08:05:41.000Z","updated":"2016-12-22T16:51:10.000Z","comments":true,"path":"2012/12/hello-world/","link":"","permalink":"http://fahrifirdaus.web.id/2012/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"Catatan","slug":"Catatan","permalink":"http://fahrifirdaus.web.id/categories/Catatan/"},{"name":"Hi-Lite","slug":"Catatan/Hi-Lite","permalink":"http://fahrifirdaus.web.id/categories/Catatan/Hi-Lite/"}],"tags":[]},{"title":"Hello World, in Action!","slug":"hello-world-in-action","date":"2012-11-30T08:04:41.000Z","updated":"2016-12-22T16:46:48.000Z","comments":true,"path":"2012/11/hello-world-in-action/","link":"","permalink":"http://fahrifirdaus.web.id/2012/11/hello-world-in-action/","excerpt":"","text":"Hello World, ya Hello World adalah kata/kalimat pertama yang biasa ditulis programmer saat belajar bahasa pemrograman baru. Tampaknya semangat Hello World juga diadopsi oleh si pembuat Wordpress (Matt Mullenweg) sebagai postingan pertama yang muncul setelah pertama kali setelah menginstall Wordpress baru. Sebagai fans programming, sepertinya saya juga akan melakukan hal yang sama dengan cara yang sedikit berbeda. Saya akan menghormati signature bapak Matt dengan tidak menghapus postingan pertama ini, namun tentu saja biar lebih bermakna dan lebih terasa seperti posting beneran saya merubah kontennya dengan benar-benar kalimat selamat datang dari saya pribadi. Amma Ba’du. Saya sudah lost count entah ini blog/web pribadi yang keberapa yang pernah saya buat. Ya, ini memang bukan blog pertama saya, meski demikian saya berharap ini blog terakhir saya tempat menuangkan hasil tulisan, ide, contekan, dan lain sebagainya. Blog saya terdahulu sebelum ini sudah nggak tahu gimana nasibnya, 3 diantaranya (yang saya upload di hosting gratisan) hilang begitu saja dihapus oleh empunya hosting, tanpa peringatan, tanpa persiapan backup, dan tentu saja tanpa bekas. Tidak ada yang bisa saya lakukan tentu saja karena namanya aja gratisan, mau murah kok protes, kalo mau bagus ya modal dikit. Okelah akhirnya sekarang saya modal dikit. Sewa hosting berbayar + sewa domain juga, meskipun masih pake yang spesifikasi rendah untuk menghemat uang. Meski demikian saya nggak janji blog/web pribadi saya ini akan bertahan selamanya, semua itu sangat bergantung dengan mood, support, dan kondisi keuangan. Tapi minimal biasanya kalau sewa hosting sudah hampir habis, pengelola hosting akan memberikan peringatan. Ya paling tidak, kalau saya lagi pengen absen beberapa saat, saya diberi kesempatan untuk melakukan backup konten, dan saat sudah on fire lagi saya bisa melanjutkan menulis di blog baru tanpa harus kehilangan tulisan yang lama. Oke, mengenai konten yang akan saya tulis di sini mungkin sedikit berbeda dengan blog saya sebelumnya. Kalau dulu saya idealis sekali hanya mau memposting tulisan original saya sendiri, sekarang mungkin terkadang saya akan me-reposting tulisan orang lain dengan tetap mencantumkan sumber aslinya. Kalau dulu saya sukanya posting tulisan panjang-panjang, mungkin kali ini saya juga akan memposting tulisan singkat. Baiklah sepertinya tidak bijaksana kalau saya memperpanjang tulisan ini lagi, toh ini hanya kata-kata pembuka. Dan siapa sih yang mau baca tulisan preambule sebuah blog? Kalau anda benar-benar sedang membaca tulisan ini, silahkan langsung saja lanjut membaca postingan yang lain. Atau kalau berkenan silahkan tinggalkan sedikit jejak di blog ini melalui sebuah komentar. &nbsp; Terima KasihFahri Firdausillah (1.12.2012)","categories":[{"name":"Catatan","slug":"Catatan","permalink":"http://fahrifirdaus.web.id/categories/Catatan/"},{"name":"Hi-Lite","slug":"Catatan/Hi-Lite","permalink":"http://fahrifirdaus.web.id/categories/Catatan/Hi-Lite/"}],"tags":[]}]}